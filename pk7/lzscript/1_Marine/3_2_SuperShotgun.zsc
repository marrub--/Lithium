// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_SuperShotgun : Lith_MWeapon;

default
{
   Lith_Weapon.SpawnType "Lith_SuperShotgunPickup";
   Tag "$LITH_INFO_SHORT_SuperShotgun";
   Weapon.SlotNumber 3;
   Weapon.SlotPriority 0.95;
   Weapon.UpSound "weapons/ssg/draw";
   Lith_Weapon.AmmoType "Lith_ShellAmmo";
   Inventory.AltHudIcon "SSGGX0";
   +Lith_Weapon.HitScan
}

int m_Iter;
int m_Shots;

override double, double Lith_GetFirePattern()
{
   switch(m_FirePattern = (m_FirePattern + 3) % 16) {
   case 0:  return -1,  1;
   case 1:  return -7,  2;
   case 2:  return -5,  3;
   case 3:  return -4, -2;
   case 4:  return -3, -1;
   case 5:  return -2,  2;
   case 6:  return -2,  3;
   case 7:  return -1,  2;
   case 8:  return  0,  0;
   case 9:  return  1, -1;
   case 10: return  2, -2;
   case 11: return  3,  3;
   case 12: return  4,  2;
   case 13: return  5,  1;
   case 14: return  7, -2;
   case 15: return  8, -3;
   }
   return 0, 0;
}

action(Weapon) void Lith_A_FireSSG()
{
   lith_takeAmmo(2);
   SoundAlert(Invoker.Owner);
   Lith_FixedBullets(16, 22);
   Lith_A_GunSmokeAndSparks();
   A_StartSound("weapons/ssg/fire", lch_weapon);
   A_Recoil(1.2);
   Lith_A_RecoilUp(1.5);
   lith_gunFlash();
   soundAlert(invoker.owner);
   a_overlay(_psp_flash, "Flash");
   a_overlayFlags(_psp_flash, pspf_renderstyle, true);
   a_overlayRenderStyle(_psp_flash, style_add);
   A_FireProjectile("Lith_LightProjectileRedLong", 0);
}

states(Weapon)
{
Ready:
   SSGG A 0 {invoker.m_Iter = invoker.m_Shots = 0;}
   SSGG A 1 Lith_A_Ready;
   loop;

Deselect:
   SSGG A 1 Lith_A_Lower(_raise_normal);
   loop;

Select:
   SSGG A 1 Lith_A_Raise(_raise_normal);
   loop;

FireEmpty:
   #### # 1;
   #### # 2 offset(0, 38);
   #### # 1 offset(0, 40);
   #### # 1 offset(0, 37) A_StartSound("weapons/ssg/empty", lch_dryweapon);
   #### # 1 offset(0, 34);
   #### # 1 offset(0, 33);
   #### # 5 offset(0, 32);
   #### #### 1 A_ReFire;
   goto ReadySelector;
Fire:
   #### # 0 lith_jumpNoAmmo(4, "AltFire");
   SSGG A 2 {invoker.m_Iter = invoker.m_Shots = 2;}
   goto DoFire;
Flash:
   SSGG B 1 bright A_Light1;
   SSGG C 1 bright A_Light2;
   goto LightDone;

AltFire:
   #### # 0 lith_jumpNoAmmo(2);
   SSGG A 2 {invoker.m_Iter = invoker.m_Shots = 1;}
DoFire:
   SSGG A 1 Lith_A_FireSSG;
   SSGG A 1 bright offset(0, 50) Lith_A_RecoilDn(0.5);
   #### # 0 lith_a_setInterpolation(true);
   SSGG A 1 bright offset(0, 40) Lith_A_RecoilDn(0.5);
   SSGG A 0 Lith_A_RecoilDn(0.5);
   SSGG A 0 A_JumpIf(--invoker.m_Shots != 0, "DoFire");
   SSGG A 1 offset(0, 37);
   SSGG A 1 offset(0, 34);
   SSGG A 1 offset(0, 32);
   #### # 0 lith_a_setInterpolation(false);
OpenAnim:
   SSGG D 3;
   #### # 0 lith_a_setInterpolation(true);
   SSGG E 3;
   #### # 0 lith_a_setInterpolation(false);
   SSGG F 3;
   #### # 0 lith_a_setInterpolation(true);
   SSGG GH 3;
   #### # 0 lith_a_setInterpolation(false);
   SSGG I 2;
   #### # 0 lith_a_setInterpolation(true);
   SSGG J 2 A_StartSound("weapons/ssg/open", lch_reload);
   #### # 0 lith_a_setInterpolation(false);
   SSGG Z 1;
   #### # 0 lith_a_setInterpolation(true);
   SSGG Z 1 offset(4, 35) {
      for(int i = 0; i < invoker.m_Iter; i++)
      {
         Lith_A_Casing("Lith_CasShellHot", 20, -1, 30, FRandom(3,4), FRandom(-7,-8), FRandom(2,9));
         Lith_A_Casing("Lith_CasShellHot", 20, -4, 30, FRandom(3,4), FRandom(-7,-8), FRandom(2,9));
      }
   }
   SSGG Z 1 offset(15, 37) lith_jumpAmmo(2, "LoadAnim");
   SSGG Z 1 offset(30, 42);
   SSGG Z 2 offset(54, 54);
   #### # 0 lith_a_setInterpolation(false);
   goto CloseAnim;
LoadAnim:
   #### # 0 lith_a_setInterpolation(false);
   SSGG KL 3;
   SSGG M 4;
   SSGG N 2 A_StartSound("weapons/ssg/load", lch_reload2);
   SSGG O 2;
   SSGG O 0 A_JumpIf(--invoker.m_Iter != 0, "LoadAnim");
CloseAnim:
   SSGG P 3 offset(1, 32);
   SSGG Q 3;
   #### # 0 lith_a_setInterpolation(true);
   SSGG R 3 A_StartSound("weapons/ssg/close", lch_reload3);
   SSGG S 3;
   #### # 0 lith_a_setInterpolation(false);
   SSGG AAAAA 1 A_ReFire;
   goto ReadySelector;
}

/* EOF */
