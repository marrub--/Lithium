// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_ShotgunRailPuff : Actor
{
   default
   {
      DamageType "Electric";

      +ALWAYSPUFF
      +FORCEDECAL
   }
}

class Lith_Shotgun : Lith_MWeapon;

default
{
   Lith_Weapon.SpawnType "Lith_ShotgunPickup";
   Lith_Weapon.MagSize 15;
   Lith_Weapon.AdsInSound "weapons/shotgun/zoomin";
   Lith_Weapon.AdsOutSound "weapons/shotgun/zoomout";
   Tag "$LITH_INFO_SHORT_Shotgun";
   Weapon.SlotNumber 3;
   Weapon.SlotPriority 1;
   Weapon.UpSound "weapons/shotgun/draw";
   Inventory.AltHudIcon "SHOTA0";
   Lith_Weapon.AmmoType "Lith_ShellAmmo";

   +Weapon.NoAutoFire
   +Lith_Weapon.HitScan
}

int m_Just;

override double, double Lith_GetFirePattern()
{
   switch(m_FirePattern = (m_FirePattern + 1) % 8) {
   case 0: return -2,    0;
   case 1: return -1,    0;
   case 2: return -0.5, -0.2;
   case 3: return  0,    0.2;
   case 4: return  0,   -0.2;
   case 5: return  0.5, -0.2;
   case 6: return  1,    0;
   case 7: return  2,    0;
   }
   return 0, 0;
}

action(Weapon) void Lith_A_JustAttack()
{
   if(invoker.m_Just)
   {
      invoker.m_Just = 0;
      SoundAlert(Invoker.Owner);
      A_StartSound("weapons/shotgun/just", lch_weapon2);
      A_RailAttack(40, 0, false, "", "LightBlue", RGF_SILENT | RGF_FULLBRIGHT, 128, "Lith_BasicPuff", 0, 0, 0, 48, 3, 3);
   }
}

action(Weapon) void Lith_A_FireShotgun()
{
   lith_takeAmmo();
   Lith_A_JustAttack();
   SoundAlert(Invoker.Owner);
   A_Recoil(0.4);
   Lith_A_GunSmokeAndSparks();
   A_FireProjectile("Lith_LightProjectileRedLong", 0);

   if(Lith_UTIL.pData(_pdt_upgrade, UPGR_Shotgun_B))
   {
      Lith_FixedBullets(8, 19, pufftype: "Lith_PoisonBullet");
      A_StartSound("weapons/shotgun/poison/fire", lch_weapon);
   }
   else
   {
      Lith_FixedBullets(8, 17);
      A_RailAttack(70, 0, true, "", "Green", RGF_SILENT | RGF_FULLBRIGHT, 2, "Lith_ShotgunRailPuff", 1, 1, 0, 0, 0.9, 1, "Lith_ShotgunTrail", 0);
      if(lith_weapons_reducedsg)
         A_StartSound("weapons/shotgun/fire2", lch_weapon);
      else
         A_StartSound("weapons/shotgun/fire", lch_weapon);
   }
}

action(Weapon) void Lith_A_FireGauss()
{
   Lith_A_MagIncr();
   Lith_A_JustAttack();
   SoundAlert(Invoker.Owner);
   A_FireBullets(0, 0, 1, 28, pufftype: "Lith_GaussPuff", flags: FBF_NORANDOM);
   A_Quake(1, 5, 0, 64);
   A_RailAttack(9, 0, false, "LightBlue", "Blue", RGF_NOPIERCING|RGF_FULLBRIGHT, 0, "Lith_BasicPuff", 0.05, 0.05, 0, 5, FRandom(0.35, 1), 0.5);
   A_StartSound("weapons/shotgun/gauss/fire", lch_weapon);
   A_Recoil(0.777);
   A_FireProjectile("Lith_LightProjectileSkyLong", 0);
}

states(Weapon)
{
AltReady:
   SCOP A 1 Lith_A_Ready(WRF_NOBOB|WRF_ALLOWRELOAD);
   loop;
Ready:
   SHTG A 0 {if(invoker.m_Just) invoker.m_Just--;}
   SHTG A 0 A_JumpIf(Lith_UTIL.pData(_pdt_upgrade, UPGR_Shotgun_A), "ReadyGauss");
   SHTG A 1 Lith_A_Ready(WRF_ALLOWRELOAD);
   loop;
ReadyGauss:
   SHTG N 1 Lith_A_Ready(WRF_ALLOWRELOAD);
   goto ReadySelector;

Deselect: TNT1 A 0 a_jumpIf(Lith_UTIL.pData(_pdt_upgrade, UPGR_Shotgun_A), "DeselectGauss");
DeselectNormal: SHTG A 1 lith_a_lower(_raise_fast); wait;
DeselectGauss:  SHTG N 1 lith_a_lower(_raise_fast); wait;
Select:
   TNT1 A 0 {invoker.m_Just = 3;}
   TNT1 A 0 a_jumpIf(Lith_UTIL.pData(_pdt_upgrade, UPGR_Shotgun_A), "SelectGauss");
SelectNormal: SHTG A 1 lith_a_raise(_raise_fast); wait;
SelectGauss:  SHTG N 1 lith_a_raise(_raise_fast); wait;

Fire:
   #### # 0 A_JumpIf(Lith_UTIL.pData(_pdt_upgrade, UPGR_Shotgun_A), "FireGauss");
   #### # 0 lith_jumpNoAmmo;
   #### # 0 Lith_A_FireShotgun;
   #### # 0 A_JumpIf(invoker.m_ads, "FireFinish_Rail_Scoped");
FireFinish_Rail_Unscoped:
   SHTG B 1 bright offset(0, 37) {A_Light(1); Lith_A_RecoilUp(1);}
   SHTG B 1 bright offset(0, 35) A_Light(1);
   SHTG C 1 bright offset(0, 34) {A_Light(2); Lith_A_RecoilDn(0.25);}
   SHTG C 1 bright offset(0, 33) A_Light(2);
   SHTG D 2 offset(0, 32) {A_Light(0); Lith_A_RecoilDn(0.25);}
   SHTG A 4 Lith_A_RecoilDn(0.25);
   SHTG F 3 {
      Lith_A_RecoilDn(0.25);
      lith_a_setInterpolation(true);
   }
   SHTG G 3;
   SHTG H 2;
   SHTG I 1;
   SHTG J 3 Lith_A_Casing("Lith_CasShellHot", 30, 0, 30, FRandom(3,4), FRandom(7,8), FRandom(7,9));
   SHTG KI 1;
   SHTG H 3;
   SHTG G 1 offset(-13, 32);
   SHTG G 1 offset(0, 32);
   SHTG F 1 offset(-9, 32);
   SHTG F 1 offset(0, 32) lith_a_setInterpolation(false);
   SHTG A 2 offset(1, 32);
   SHTG AAAAAAA 1 A_ReFire();
   goto ReadySelector;
FireFinish_Rail_Scoped:
   SCOP A 1 bright A_Light1;
   SCOP A 1 bright A_Light2;
   SCOP A 2 A_Light0;
   SCOP A 14;
   SCOP A 10 Lith_A_Casing("Lith_CasShellHot", 30, 0, 30, FRandom(3,4), FRandom(7,8), FRandom(7,9));
   SCOP A 5 A_WeaponReady(WRF_NOPRIMARY | WRF_NOBOB);
   SCOP A 0 A_ReFire;
   SCOP A 7 A_WeaponReady(WRF_NOPRIMARY | WRF_NOBOB);
   goto ReadySelector;
FireGauss:
   #### # 0 Lith_A_JumpIfMagEmpty;
   #### # 0 Lith_A_FireGauss;
   #### # 0 A_JumpIf(invoker.m_ads, "FireFinish_Gauss_Scoped");
FireFinish_Gauss_Unscoped:
   SHTG N 1;
   SHTG L 1 A_Light(3);
   SHTG M 1 A_Light(2);
   SHTG O 1 A_Light(1);
   SHTG N 1 A_Light(0);
   SHTG N 2;
   SHTG NNNNNNN 1 A_ReFire;
   goto ReadySelector;
FireFinish_Gauss_Scoped:
   SCOP A 1 bright A_Light(3);
   SCOP A 1 bright A_Light(2);
   SCOP A 1 {A_Light(1); A_WeaponReady(WRF_NOPRIMARY|WRF_NOBOB);}
   SCOP A 4 {A_Light(0); A_WeaponReady(WRF_NOPRIMARY|WRF_NOBOB);}
   SCOP AAAAAAA 1 A_ReFire;
   goto ReadySelector;
FireEmpty:
   #### # 1;
   #### # 2 offset(0, 38);
   #### # 1 offset(0, 40);
   #### # 1 offset(0, 37) A_StartSound("weapons/spas/empty", lch_dryweapon);
   #### # 1 offset(0, 34);
   #### # 1 offset(0, 33);
   #### # 5 offset(0, 32);
   goto ReadySelector;

AltFire:
   #### # 1;
   #### # 0 Lith_A_AdsToggle(_ads_scope);
   goto ReadySelector;

Reload:
   #### # 0 A_JumpIf(!Lith_UTIL.pData(_pdt_upgrade, UPGR_Shotgun_A), "ReadySelector");
   #### # 0 Lith_A_JumpIfMagFull;
   SHTG N 2 Lith_A_AdsOut;
   SHTG F 0 Lith_A_ReloadBobUp(0.2);
   SHTG F 2 A_StartSound("weapons/shotgun/gauss/reloadout", lch_reload);
   SHTG G 2 Lith_A_ReloadBobUp(0.1);
   SHTG G 0 Lith_A_ReloadBobUp(0.1);
   SHTG H 2 Lith_A_DropMag("Lith_GaussMagazine", "Lith_GaussMagazine2", 8,-1,20, FRandom(0,1),FRandom(-1,-2),0);
   SHTG I 2 offset(-11, 57);
   SHTG I 5 offset(-10, 60);
   SHTG I 5 offset(-11, 60);
   SHTG I 0 Lith_A_ReloadBobDn(0.4);
   SHTG I 0 Lith_A_ReloadFinish;
   SHTG I 2 offset(-13, 59) A_StartSound("weapons/shotgun/gauss/reloadin", lch_reload2);
   SHTG I 2 offset(-11, 49) Lith_A_ReloadBobDn(0.4);
   SHTG I 2 offset(-11, 47) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   SHTG I 5 offset(-11, 45) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   SHTG I 1 offset(-12, 49) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   SHTG I 1 offset(-8, 53) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   SHTG I 1 offset(-1, 57) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   SHTG I 1 offset(3, 56) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   SHTG I 1 offset(10, 49) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   SHTG I 1 offset(8, 47) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   SHTG I 1 offset(7, 45) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   SHTG I 1 offset(5, 43) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   SHTG G 1 offset(-13, 32);
   SHTG G 1 offset(1, 32);
   SHTG F 1 offset(-9, 32);
   SHTG F 1 offset(1, 32);
   SHTG NNNNNNN 1 A_ReFire;
   goto ReadySelector;
}

/* EOF */
