// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_FinalizerEffect : Actor
{
   default
   {
      Height 0;
      Radius 0;
      RenderStyle "Add";
      Scale 0.2;

      +FORCEXYBILLBOARD
      +NOINTERACTION
      +NOTIMEFREEZE
   }

   states
   {
   Spawn:
      BLLT O 10 bright;
      BLLT O 1 bright A_FadeOut(0.2);
      wait;
   }
}

class Lith_FinalizerShotEffect : Actor
{
   default
   {
      RenderStyle "Add";
      Scale 0.8;

      +NOINTERACTION
      +NOTIMEFREEZE
   }

   states
   {
   Spawn:
      BLLT E 1 bright A_FadeOut;
      wait;
   }
}

class Lith_FinalizerShot : FastProjectile
{
   default
   {
      Height 6;
      MissileType "Lith_FinalizerShotEffect";
      Radius 6;
      RenderStyle "Add";
      Speed 90;

      Projectile;
      +HITTRACER
      +NOTIMEFREEZE
   }

   states
   {
   Spawn:
      TNT1 A 1;
      wait;
   Death:
      TNT1 A 0 {
         if(tracer) {
            if(tracer.bBOSS || (double(tracer.health) / tracer.ACS_ScriptCall("Lith_GetFinalizerMaxHealth") > 0.5 && tracer.health - 50 > 0)) {
               tracer.A_DamageSelf(50);
            } else {
               Lith_CopyEffect.create("Lith_FinalizerKill", tracer);
               tracer.ACS_ScriptCall("Lith_MonsterFinalized");
               if(tracer.bBOSSDEATH) tracer.A_BossDeath();
               tracer.destroy();
            }
         }
      }
      stop;
   }
}

class Lith_Mateba : Lith_CWeapon;

default
{
   Lith_Weapon.SpawnType "Lith_PistolPickup";
   Lith_Weapon.MagSize 12;
   Tag "$LITH_INFO_SHORT_Mateba";
   Weapon.BobRangeX 0.2;
   Weapon.BobRangeY 0.3;
   Weapon.BobSpeed 2.5;
   Weapon.SlotNumber 2;
   Weapon.SlotPriority 1;
   Weapon.UpSound "weapons/mateba/draw";
   Inventory.AltHudIcon "REVLA0";
   +Weapon.NoAutoFire
   +Lith_Weapon.HitScan
}

action(Weapon) State Lith_A_FireMateba()
{
   Lith_A_MagIncr();
   lith_gunFlash();
   soundAlert(invoker.owner);
   if(invoker.m_Fired & 1)
      Lith_A_Casing("Lith_CasSmallHot", 14, 2, 32, frandom(1,2), frandom(3,5), frandom(2,3));
   if(Lith_UTIL.pData(_pdt_upgrade, UPGR_Mateba_A) && invoker.Lith_MagEmpty())
      return ResolveState("Finalize");
   invoker.bHitScan = true;
   Lith_A_RecoilDn(0.2);
   Lith_FireBullets(2, 2, -1, 30, FBF_NORANDOM);
   A_FireProjectile("Lith_LightProjectileRedShort", 0);
   Lith_A_GunSmokeAndSparksSmall();
   A_StartSound("weapons/mateba/fire", lch_weapon);
   return null;
}

action(Weapon) void Lith_A_FireFinalizer()
{
   invoker.bHitScan = false;
   Lith_A_GunSmokeAndSparksSmall();
   A_SpawnItemEx("Lith_FinalizerEffect", cos(pitch)*24, 0, ((height-19)+2) - sin(pitch)*24);
   A_FireProjectile("Lith_FinalizerShot", 0, false, 0, 10);
   A_StartSound("weapons/mateba/fire", lch_weapon);
   A_StartSound("weapons/mateba/finalize", lch_weapon2);
   A_StartSound("weapons/shotgun/just", lch_weapon3);
}

states(Weapon)
{
Ready:
   MTBG A 1 Lith_A_Ready(WRF_ALLOWRELOAD);
   loop;

Deselect:
   MTBG A 1 Lith_A_Lower(_raise_fast);
   loop;
Select:
   MTBG A 1 Lith_A_Raise(_raise_fast);
   loop;

Fire:
   MTBG A 0 Lith_A_JumpIfMagEmpty;
   MTBG B 1 bright offset(0, 36) Lith_A_FireMateba;
   MTBG C 1 bright offset(0, 43) Lith_A_RecoilUp(0.1);
   MTBG G 1 offset(3, 38) Lith_A_RecoilUp(0.1);
   MTBG G 1 offset(0, 37);
   MTBG G 1 offset(0, 34) A_WeaponReady(WRF_NOBOB);
   MTBG F 1 offset(2, 35) A_WeaponReady(WRF_NOBOB);
   MTBG F 1 offset(0, 33) A_WeaponReady(WRF_NOBOB);
   MTBG A 1 offset(1, 34) A_WeaponReady(WRF_NOBOB);
   MTBG A 1 offset(0, 33) A_WeaponReady(WRF_NOBOB);
   MTBG A 1 offset(0, 32) A_WeaponReady(WRF_NOBOB);
   goto ReadySelector;
Finalize:
   MTBG B 1 bright offset(0, 55) Lith_A_FireFinalizer;
   MTBG C 1 bright offset(0, 51);
   MTBG A 1 offset(0, 45);
   MTBG A 1 offset(0, 43);
   MTBG A 1 offset(0, 40);
   MTBG A 1 offset(0, 37);
   MTBG A 1 offset(0, 34) A_WeaponReady(WRF_NOBOB);
   MTBG A 1 offset(0, 33) A_WeaponReady(WRF_NOBOB);
   MTBG A 1 offset(0, 32) A_WeaponReady(WRF_NOBOB);
   MTBG A 1 A_WeaponReady(WRF_NOBOB);
   goto ReadySelector;

FireEmpty:
   MTBG A 1;
   MTBG A 1 offset(0, 45);
   MTBG A 1 offset(0, 43);
   MTBG A 1 offset(0, 40) A_StartSound("weapons/empty", lch_dryweapon);
   MTBG A 1 offset(0, 38);
   MTBG A 1 offset(0, 36);
   MTBG A 1 offset(0, 33);
   MTBG A 1 offset(0, 32);
   MTBG A 2;
   goto ReadySelector;

Reload:
   #### # 0 Lith_A_JumpIfMagFull;
   MTBG E 2;
   MTBG F 2;
   MTBG G 2;
   MTBG H 2;
   MTBG I 4 A_StartSound("weapons/mateba/open", lch_reload);
   MTBG J 3;
   MTBG K 2;
   MTBG L 3 {
      A_StartSound("weapons/mateba/eject", lch_reload2);
      Lith_A_ReloadBobDn(0.1);
   }
   MTBG M 3 {
      for(int i = 0; i < invoker.m_Fired / 2; i++)
         Lith_A_Casing("Lith_CasSmall", 10, frandom(1,2), 32, frandom(1,2), frandom(1,3), 0);
      Lith_A_ReloadFinish();
   }
   MTBG N 3;
   MTBG O 2 {
      A_StartSound("weapons/mateba/load", lch_reload);
      Lith_A_ReloadBobDn(0.1);
   }
   MTBG P 3;
   MTBG Q 3 {
      A_StartSound("weapons/mateba/close", lch_reload2);
      Lith_A_ReloadBobUp(0.1);
   }
   MTBG R 3;
   MTBG S 4;
   goto ReadySelector;
}

/* EOF */
