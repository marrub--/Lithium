// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_BladeHit : FastProjectile
{
   default
   {
      DamageFunction 40 * random(1, 2);
      Height 8;
      Radius 16;
      Speed 128;

      +FORCEPAIN
   }

   states
   {
   Spawn:
      TNT1 A 1;
      stop;
   XDeath:
      TNT1 A 0 {
         if(target) {
            target.A_StartSound("weapons/blade/hit", lch_body);
            target.ACS_ScriptCall("Lith_Blade", true);
         }
      }
      stop;
   }
}

class Lith_BladeHit2 : Lith_BladeHit {default {DamageFunction 40 * random(2, 3);}}

class Lith_Blade : Lith_CWeapon;

default
{
   Tag "$LITH_INFO_SHORT_Blade";
   Weapon.SlotNumber 0;
   Weapon.SlotPriority 1;
   Weapon.UpSound "weapons/blade/draw";
   Inventory.AltHudIcon "SPELF0";
   +WEAPON.NOAUTOFIRE
   -Lith_Weapon.HitScan
}

states(Weapon)
{
Ready:
   TNT1 A 1 bright Lith_A_Ready;
   loop;

Deselect:
   TNT1 A 0 Lith_A_Lower(_raise_instant);
   loop;
Select:
   TNT1 A 0 ACS_ScriptCall("Lith_MagicSelect", 1);
SelectLoop:
   TNT1 A 0 Lith_A_Raise(_raise_instant);
   loop;

Fire:
   TNT1 A 20 {
      ACS_NamedExecuteWithResult("Lith_Blade", false);
      A_StartSound("weapons/blade/slash", lch_weapon);
      A_FireProjectile("Lith_BladeLightProjectile", 0);
      if(CountInv("PowerStrength"))
         A_FireProjectile("Lith_BladeHit2");
      else
         A_FireProjectile("Lith_BladeHit");
   }
   goto ReadySelector;
}

/* EOF */
