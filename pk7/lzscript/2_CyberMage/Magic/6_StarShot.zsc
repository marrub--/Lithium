// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_Star : Actor
{
   default
   {
      DamageFunction 5 * Random(2, 3);
      DamageType "Magic";
      Height 2;
      Mass 0;
      Radius 2;
      RenderStyle "Add";
      Scale 0.7;
      SeeSound "weapons/sshot/fire";
      Speed 32;

      Projectile;
      +BRIGHT
      +NODAMAGETHRUST
      +SCREENSEEKER
      +SEEKERMISSILE
   }

   states
   {
   Spawn:
      TNT1 A 0;
      STSH A 0 A_JumpIf(Random(0, 100) < 75, "Spawn1");
      STS2 A 0;
   Spawn1:
      #### ABC random(0, 1);
   SpawnLoop:
      #### ABC 1 A_SeekerMissile(0, 1, SMF_LOOK);
      loop;
   Death:
      TNT1 A 0 A_StartSound("weapons/sshot/hit", lch_body, volume: 0.3);
      stop;
   }
}

class Lith_StarShotSprite : Actor
{
   default
   {
      RenderStyle "Add";
      Scale 0.7;
      FloatBobStrength 2.0;

      +BRIGHT
      +NOINTERACTION
      +NOTIMEFREEZE
      +FLOATBOB
   }

   double m_randofs;

   states
   {
   Spawn:
      TNT1 A 0;
      TNT1 A 0 {m_randofs = frandom(0, 180);}
      STSH A 0 A_JumpIf(Random(0, 100) < 75, "Spawn1");
      STS2 A 0;
   Spawn1:
      #### A 1;
   SpawnLoop:
      #### BCA 1 {
         A_Warp(AAPTR_PLAYER1, 64,0,32, (level.time+m_randofs)*1.7%180.0-90.0, WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE);
         return Lith_UTIL.pData(_pdt_weapon) != weapon_c_starshot ? ResolveState("Null") : state(null);
      }
      loop;
   }
}

class Lith_StarShot : Lith_CWeapon;

default
{
   Lith_Weapon.MagSize 150;
   Tag "$LITH_INFO_SHORT_StarShot";
   Weapon.SlotNumber 0;
   Weapon.SlotPriority 1;
   Weapon.UpSound "weapons/starshot/draw";
   Lith_Weapon.AmmoType "Lith_ManaAmmo";
   Inventory.AltHudIcon "SPELD0";

   -Weapon.NoAutoFire
   +Inventory.Unclearable
   -Lith_Weapon.HitScan
}

states(Weapon)
{
Ready:
   TNT1 A 1 bright Lith_A_Ready;
   loop;

Deselect:
   TNT1 A 0 Lith_A_Lower(_raise_instant);
   loop;

Select:
   TNT1 A 0 ACS_ScriptCall("Lith_MagicSelect", 6);
   TNT1 AAAAAAAAAAAAAA 0 Spawn("Lith_StarShotSprite", pos);
SelectLoop:
   TNT1 A 0 Lith_A_Raise(_raise_instant);
   loop;

Fire:
   TNT1 A 0 Lith_A_JumpIfMagEmpty(false);
   TNT1 A 2 bright {
      Lith_A_MagIncr(RandomPick(2, 4));
      SoundAlert(Invoker.Owner);
      A_StartSound("weapons/sshot/firero", lch_dryweapon, volume: CallACS("Lith_AmmoRunOut", true, 0.5*FIX)/FIX);
      A_FireProjectile("Lith_Star", FRandom(-5,5), false, -20, 10, FPF_NOAUTOAIM, -FRandom(-2,3));
      A_FireProjectile("Lith_Star", FRandom(-5,5), false,  20, 10, FPF_NOAUTOAIM, -FRandom(-2,3));
      A_FireProjectile("Lith_Star", FRandom(-2,2), false, -16, 16, FPF_NOAUTOAIM, -FRandom(-2,3));
      A_FireProjectile("Lith_Star", FRandom(-2,2), false,  16, 16, FPF_NOAUTOAIM, -FRandom(-2,3));
      A_Recoil(0.01);
      Angle += FRandom(-0.2, 0.2);
      A_Quake(1, 4, 0, 128);
   }
   goto ReadySelector;

Reload:
   TNT1 A 0 lith_jumpNoAmmo(100);
   TNT1 A 22 {
      lith_takeAmmo(100);
      A_StartSound("weapons/delear/open", lch_reload);
   }
   TNT1 A 10 A_StartSound("weapons/delear/charge", lch_reload2);
   TNT1 A 4 Lith_A_ReloadFinish;
   TNT1 A 4 A_StartSound("weapons/delear/close", lch_reload);
   goto ReadySelector;
}

/* EOF */
