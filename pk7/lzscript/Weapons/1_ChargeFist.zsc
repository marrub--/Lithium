// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │                       By Marrub / Alison. & Yholl.                       │
// │             Attribution is encouraged, though not required.              │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_FistCharge : Inventory {default {Inventory.MaxAmount int.max;}} /* Yes. */
class Lith_FistHit : Powerup {default {Powerup.Duration 5;}}

class Lith_ChargeFistPuff : Actor {
   default {
      Alpha 0.6;
      RenderStyle "Translucent";
      +HITTRACER
      +NOINTERACTION
      +PUFFGETSOWNER
      +PUFFONACTORS
   }
   bool bSound;
   override void beginPlay() {
      super.beginPlay();
      bSound = true;
   }
   override void markPrecacheSounds() {
      super.markPrecacheSounds();
      markSound("weapons/cfist/hit");
      markSound("weapons/cfist/hitwall");
   }
   states {
   Crash:
   Spawn:
      TNT1 A 0;
      TNT1 A 0 {if(self.target) self.target.GiveInventory("Lith_FistHit", 1);}
      goto Animation;
   XDeath:
      TNT1 A 0;
      TNT1 A 0 {
         if(self.target) {
            self.target.GiveInventory("Lith_FistHit", 1);
         }
         A_StartSound("weapons/cfist/hit", lch_body, attenuation: 1.3); /* much squish loud yes */
         if(bSound) {
            A_StartSound("weapons/cfist/hit", lch_body2, attenuation: 1.3);
         }
      }
   Animation:
      FHFX S 3 {
         A_Quake(5, 3, 0, 128, "");
         if(bSound) {
            A_StartSound("weapons/cfist/hitwall", lch_body, attenuation: 0.9);
         }
      }
      FHFX T 3 A_Quake(2, 3, 0, 128, "");
      FHFX U 3 A_Quake(1, 3, 0, 128, "");
      FHFX VW 3;
      stop;
   }
}

class Lith_ChargeFist : Lith_OutcastsWeapon;

default {
   Lith_Weapon.SpawnType "Lith_ChainsawPickup";
   DamageType "Melee";
   Tag "$LITH_INFO_SHORT_ChargeFist";
   Weapon.Kickback 100;
   Weapon.SlotNumber 1;
   Weapon.SlotPriority 1;
   Inventory.AltHudIcon "CFISZ0";
   +WEAPON.CHEATNOTWEAPON
   +WEAPON.MELEEWEAPON
   +WEAPON.NOAUTOFIRE
}
override void markPrecacheSounds() {
   super.markPrecacheSounds();
   markSound("weapons/cfist/ready");
   markSound("weapons/cfist/charge");
   markSound("weapons/cfist/chargeend");
   markSound("weapons/cfist/fire");
}
states(Weapon) {
Ready:
   TNT1 A 0 {self.TakeInventory("Lith_FistCharge", int.max);}
   TNT1 A 1 Lith_A_Ready;
   loop;

Deselect:
   TNT1 A 0 A_StopSound(lch_weapon);
   TNT1 A 0 Lith_A_Lower(_raise_instant);
   wait;

Select:
   TNT1 A 0 Lith_A_Raise(_raise_instant);
   loop;

Fire:
   TNT1 A 9 {self.GiveInventory("Lith_FistCharge", 35);}
   TNT1 A 0 A_ReFire("Fire1");
   goto Release1;
Fire1:
   CFIS A 0 {self.GiveInventory("Lith_FistCharge", 35);}
   CFIS A 0 A_JumpIf(Lith_Player(self).m_pclass == pcl_marine, 2);
   CCFS A 0;
   #### A 1 A_StartSound("weapons/cfist/ready", lch_weapon2);
   #### B 1 A_StartSound("weapons/cfist/charge", lch_weapon, CHANF_LOOP);
   #### C 2;
   #### D 2;
   #### E 3;
   #### F 4;
   #### G 7;
   goto WaitForRelease;
WaitForRelease:
   #### G 1 {self.GiveInventory("Lith_FistCharge", 2);}
   #### G 1 A_ReFire("WaitForRelease");
Release:
   TNT1 A 0 A_StartSound("weapons/cfist/chargeend", lch_weapon);
   TNT1 A 0 {
      a_overlay(_psp_flash, "SekritHax"); /* OH NO NOT yholehax */
      a_overlayFlags(_psp_flash, pspf_renderstyle, true);
      a_overlayRenderStyle(_psp_flash, style_normal);
   }
Release1:
   CFI2 A 0 A_JumpIf(Lith_Player(self).m_pclass == pcl_marine, "Release2");
   CCF2 A 0;
   /* GOTTA RELEASE FAST */
Release2:
   #### # 0 A_ChangeVelocity(Cos(Pitch) * 3, 0, Sin(Pitch) * -3, 1);
   #### # 0 SoundAlert(Invoker.Owner, maxDist: 128);
   #### A 1 A_StartSound("weapons/cfist/fire", lch_weapon2);
   #### B 1;
   #### # 0 lith_a_fireMelee(CallACS("Lith_ChargeFistDamage"), 128, 0, "Lith_ChargeFistPuff");
   #### # 0 A_JumpIf(countInv("Lith_FistHit") >= 1, "HitRecoil");
   #### C 2 lith_a_setInterpolation(true);
   /* Missed, so you quickly bring your fist back */
   #### D 5;
   #### H 2;
   #### I 1;
   #### J 1;
   #### K 1 lith_a_setInterpolation(false);
   TNT1 A 1;
   TNT1 AAAAAAAAAA 1 A_ReFire;
   goto ReadySelector;
HitRecoil:
   #### # 0 {
      SoundAlert(Invoker.Owner);
      A_ChangeVelocity(Cos(Pitch) * -2, 0, Sin(Pitch) * 2, 1);
      lith_a_setInterpolation(true);
   }
   #### C 1;
   #### DEFG 1; /* Shaking from the force of the impact */
   #### DEFG 2;
   #### H 2;
   #### I 2;
   #### J 2;
   #### K 2 lith_a_setInterpolation(false);
   TNT1 A 1;
   TNT1 AAAAAAAAAA 1 A_ReFire;
   goto ReadySelector;
   /* the crimera has struck again */
SekritHax:
   CFIS A 0 A_JumpIf(Lith_Player(self).m_pclass == pcl_marine, 2);
   CCFS A 0;
   #### HI 1;
   stop;
}

/* EOF */
