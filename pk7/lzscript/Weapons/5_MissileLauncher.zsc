// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │                       By Marrub / Alison. & Yholl.                       │
// │             Attribution is encouraged, though not required.              │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_MissileLauncher : Lith_OutcastsWeapon;

default {
   Tag "$LITH_INFO_SHORT_MissileLauncher";
   Weapon.UpSound "weapons/missile/draw";
   Weapon.SlotNumber 5;
   Weapon.SlotPriority 0.9;
   Weapon.BobStyle "Smooth";
   Weapon.BobSpeed 1.3;
   Weapon.BobRangeY 1.1;
   Weapon.BobRangeX 0.9;
   Inventory.AltHudIcon "MLAUA0";
   Lith_Weapon.MagSize 10;
   Lith_Weapon.AmmoType "Lith_RocketAmmo";
   +WEAPON.CHEATNOTWEAPON
}
int m_Reset;
override void markPrecacheSounds() {
   super.markPrecacheSounds();
   markSound("weapons/missile/empty");
   markSound("weapons/missile/fire");
   markSound("weapons/missile/reloadin");
   markSound("weapons/missile/reloadout");
}
action(Weapon) State Lith_A_FireMissile() {
   Lith_A_MagIncr();
   SoundAlert(Invoker.Owner);
   A_StartSound("weapons/missile/fire", lch_weapon);
   lith_takeAmmo();
   for(int i = 0; i < 3; i++)
      A_FireProjectile("Lith_MiniMissile", FRandom(-7, 7), false, FRandom(-2, 2), FRandom(-2, 2), FPF_NOAUTOAIM, FRandom(-5, 5));
   A_FireProjectile("Lith_LightProjectileRedShort", 0);
   switch(invoker.m_Reset = Min(invoker.m_Reset, 5)) {
   case 5: return ResolveState("FireAnim6"); /* fuck you eat crime */
   case 4: return ResolveState("FireAnim5");
   case 3: return ResolveState("FireAnim4");
   case 2: return ResolveState("FireAnim3");
   case 1: return ResolveState("FireAnim2");
   }
   return null;
}
states(Weapon) {
Ready:
   MISG A 1 Lith_A_Ready(WRF_ALLOWRELOAD);
   loop;
Deselect:
   MISG A 1 Lith_A_Lower(_raise_fast);
   loop;
Select:
   MISG A 1 Lith_A_Raise(_raise_fast);
   loop;
Reload:
   MISG A 0 Lith_A_JumpIfMagFull;
   MISG A 1 lith_a_setInterpolation(true);
   MISG A 1 offset(-2, 34);
   MISG A 1 offset(-4, 37);
   MISG A 1 offset(-9, 43) A_StartSound("weapons/missile/reloadout", lch_reload);
   MISG A 1 offset(-12, 47) Lith_A_ReloadBobUp(0.3);
   MISG A 1 offset(-14, 52) Lith_A_ReloadBobUp(0.4);
   MISG A 2 offset(-12, 55);
   MISG A 3 offset(-11, 57);
   MISG A 8 offset(-10, 60);
   MISG A 8 offset(-11, 60);
   MISG A 2 offset(-13, 59) {
      A_StartSound("weapons/missile/reloadin", lch_reload2);
      Lith_A_ReloadFinish();
   }
   MISG A 2 offset(-11, 49) {
      Lith_A_ReloadBobDn(0.4);
      lith_a_setInterpolation(false);
   }
   MISG A 2 offset(-11, 47) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   MISG A 7 offset(-11, 45) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   MISG A 1 offset(-12, 49) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   MISG A 1 offset(-8, 53) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   MISG A 1 offset(-1, 57) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   MISG A 2 offset(3, 56) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   MISG A 2 offset(8, 52) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   MISG A 2 offset(10, 49) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   MISG A 2 offset(8, 47) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   MISG A 2 offset(7, 45) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   MISG A 2 offset(5, 43) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   MISG A 2 offset(3, 40) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   MISG A 3 offset(2, 39) A_WeaponReady(WRF_NOBOB);
   MISG A 3 offset(1, 37) A_WeaponReady(WRF_NOBOB);
   MISG A 4 offset(1, 34) A_WeaponReady(WRF_NOBOB);
   MISG A 4 A_WeaponReady(WRF_NOBOB);
   goto ReadySelector;
Fire:
   MISG A 0 {invoker.m_Reset = 0;}
Fire1:
   MISG A 1;
   MISG A 0 lith_jumpNoAmmo;
   #### # 0 Lith_A_JumpIfMagEmpty;
   MISG A 0 Lith_A_FireMissile;
FireAnim: /* choke on the crime */
   MISG B 1 bright offset(0, 32);
   MISG C 1 bright offset(0, 33);
   MISG D 1 bright offset(0, 34);
   MISG A 0 {invoker.m_Reset++;}
   goto AnimResetting;
FireAnim2: /* be consumed by the crime */
   MISG B 1 bright offset(0, 33);
   MISG C 1 bright offset(0, 34);
   MISG D 1 bright offset(0, 35);
   MISG A 0 {invoker.m_Reset++;}
   goto AnimResetting2;
FireAnim3: /* fall victim to the crime */
   MISG B 1 bright offset(0, 34);
   MISG C 1 bright offset(0, 35);
   MISG D 1 bright offset(0, 36);
   MISG A 0 {invoker.m_Reset++;}
   goto AnimResetting3;
FireAnim4: /* crime is love */
   MISG B 1 bright offset(0, 35);
   MISG C 1 bright offset(0, 36);
   MISG D 1 bright offset(0, 37);
   MISG A 0 {invoker.m_Reset++;}
   goto AnimResetting4;
FireAnim5: /* crime is life */
   MISG B 1 bright offset(0, 36);
   MISG C 1 bright offset(0, 37);
   MISG D 1 bright offset(0, 38);
   MISG A 0 {invoker.m_Reset++;}
   goto AnimResetting5;
FireAnim6: /* worship the crime, for it brings graf salt */
   MISG B 1 bright offset(0, 37);
   MISG C 1 bright offset(0, 38);
   MISG D 1 bright offset(0, 39);
   MISG A 0 {invoker.m_Reset++;}
   goto AnimResetting6;
AnimResetting6: /* oh yessssss */
   MISG A 1 offset(0, 39) A_ReFire("Fire1");
   MISG A 0 {invoker.m_Reset--;}
AnimResetting5:
   MISG A 1 offset(0, 37) A_ReFire("Fire1");
   MISG A 0 {invoker.m_Reset--;}
AnimResetting4:
   MISG A 1 offset(0, 36) A_ReFire("Fire1");
   MISG A 0 {invoker.m_Reset--;}
AnimResetting3:
   MISG A 1 offset(0, 35) A_ReFire("Fire1");
   MISG A 0 {invoker.m_Reset--;}
AnimResetting2:
   MISG A 1 offset(0, 34) A_ReFire("Fire1");
   MISG A 0 {invoker.m_Reset--;}
AnimResetting:
   MISG A 1 offset(0, 33) A_ReFire("Fire1");
   MISG A 0 {invoker.m_Reset--;}
   MISG AAAAA 1 offset(0, 32) A_ReFire("Fire1");
   goto ReadySelector;
FireEmpty: /* fuck u i ain't doing more */
   MISG A 1;
   MISG A 2 offset(0, 41);
   MISG A 1 offset(0, 45);
   MISG A 1 offset(0, 43);
   MISG A 1 offset(0, 40) A_StartSound("weapons/missile/empty", lch_dryweapon);
   MISG A 1 offset(0, 38);
   MISG A 1 offset(0, 36);
   MISG A 1 offset(0, 33);
   MISG A 1 offset(0, 32);
   MISG A 5;
   MISG AAAA 1 A_ReFire;
   goto ReadySelector;
}

/* EOF */
