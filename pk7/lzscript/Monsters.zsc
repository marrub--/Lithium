// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

#include "lzscript/Monsters/Base.zsc"

#include "lzscript/Monsters/Heretic.zsc"

#include "lzscript/Monsters/Doom/BossBrain.zsc"

#include "lzscript/Monsters/Doom/1_ChaingunGuy.zsc"
#include "lzscript/Monsters/Doom/1_Imp.zsc"
#include "lzscript/Monsters/Doom/1_ShotgunGuy.zsc"
#include "lzscript/Monsters/Doom/1_ZombieMan.zsc"

#include "lzscript/Monsters/Doom/2_Demon.zsc"
#include "lzscript/Monsters/Doom/2_LostSoul.zsc"
#include "lzscript/Monsters/Doom/2_Spectre.zsc"

#include "lzscript/Monsters/Doom/3_Arachnotron.zsc"
#include "lzscript/Monsters/Doom/3_Baron.zsc"
#include "lzscript/Monsters/Doom/3_Cacodemon.zsc"
#include "lzscript/Monsters/Doom/3_Knight.zsc"
#include "lzscript/Monsters/Doom/3_Mancubus.zsc"
#include "lzscript/Monsters/Doom/3_Revenant.zsc"

#include "lzscript/Monsters/Doom/4_Archvile.zsc"
#include "lzscript/Monsters/Doom/4_PainElemental.zsc"

#include "lzscript/Monsters/Doom/5_Cyberdemon.zsc"
#include "lzscript/Monsters/Doom/5_SpiderMastermind.zsc"

#include "lzscript/Monsters/Lithium/TitleMap.zsc"
#include "lzscript/Monsters/Lithium/Phantom.zsc"

#include "lzscript/Monsters/Lithium/6_Archangel.zsc"
#include "lzscript/Monsters/Lithium/6_Isaac.zsc"
#include "lzscript/Monsters/Lithium/6_James.zsc"
#include "lzscript/Monsters/Lithium/6_Johnson.zsc"
#include "lzscript/Monsters/Lithium/6_Makarov.zsc"
#include "lzscript/Monsters/Lithium/6_Michael.zsc"

class Lith_UniqueID : Inventory {
   default {
      Inventory.MaxAmount int.max;
      +Inventory.Undroppable
   }
   override void tick() {
   }
}

class Lith_MonsterID : Lith_UniqueID {}

class Lith_MResist : PowerProtection {default {Powerup.Duration 0x7FFFFFFD;}}
class Lith_M_Bullets1 :Lith_MResist{default{DamageFactor "Bullet",   0.8;}}
class Lith_M_Energy1  :Lith_MResist{default{DamageFactor "Railgun",  0.8; DamageFactor "Electric", 0.8; DamageFactor "Plasma", 0.8;}}
class Lith_M_Fire1    :Lith_MResist{default{DamageFactor "Fire",     0.8;}}
class Lith_M_Magic1   :Lith_MResist{default{DamageFactor "Magic",    0.8;}}
class Lith_M_Melee1   :Lith_MResist{default{DamageFactor "Melee",    0.8;}}
class Lith_M_Shrapnel1:Lith_MResist{default{DamageFactor "Shrapnel", 0.8; DamageFactor "Explosion", 0.8;}}
class Lith_M_Bullets2 :Lith_MResist{default{DamageFactor "Bullet",   0.6;}}
class Lith_M_Energy2  :Lith_MResist{default{DamageFactor "Railgun",  0.6; DamageFactor "Electric", 0.6; DamageFactor "Plasma", 0.6;}}
class Lith_M_Fire2    :Lith_MResist{default{DamageFactor "Fire",     0.6;}}
class Lith_M_Magic2   :Lith_MResist{default{DamageFactor "Magic",    0.6;}}
class Lith_M_Melee2   :Lith_MResist{default{DamageFactor "Melee",    0.6;}}
class Lith_M_Shrapnel2:Lith_MResist{default{DamageFactor "Shrapnel", 0.6; DamageFactor "Explosion", 0.6;}}
class Lith_M_Bullets3 :Lith_MResist{default{DamageFactor "Bullet",   0.4;}}
class Lith_M_Energy3  :Lith_MResist{default{DamageFactor "Railgun",  0.4; DamageFactor "Electric", 0.4; DamageFactor "Plasma", 0.4;}}
class Lith_M_Fire3    :Lith_MResist{default{DamageFactor "Fire",     0.4;}}
class Lith_M_Magic3   :Lith_MResist{default{DamageFactor "Magic",    0.4;}}
class Lith_M_Melee3   :Lith_MResist{default{DamageFactor "Melee",    0.4;}}
class Lith_M_Shrapnel3:Lith_MResist{default{DamageFactor "Shrapnel", 0.4; DamageFactor "Explosion", 0.4;}}
class Lith_M_Bullets4 :Lith_MResist{default{DamageFactor "Bullet",   0.2;}}
class Lith_M_Energy4  :Lith_MResist{default{DamageFactor "Railgun",  0.2; DamageFactor "Electric", 0.2; DamageFactor "Plasma", 0.2;}}
class Lith_M_Fire4    :Lith_MResist{default{DamageFactor "Fire",     0.2;}}
class Lith_M_Magic4   :Lith_MResist{default{DamageFactor "Magic",    0.2;}}
class Lith_M_Melee4   :Lith_MResist{default{DamageFactor "Melee",    0.2;}}
class Lith_M_Shrapnel4:Lith_MResist{default{DamageFactor "Shrapnel", 0.2; DamageFactor "Explosion", 0.2;}}
class Lith_M_Bullets5 :Lith_MResist{default{DamageFactor "Bullet",   0.1;}}
class Lith_M_Energy5  :Lith_MResist{default{DamageFactor "Railgun",  0.1; DamageFactor "Electric", 0.1; DamageFactor "Plasma", 0.1;}}
class Lith_M_Fire5    :Lith_MResist{default{DamageFactor "Fire",     0.1;}}
class Lith_M_Magic5   :Lith_MResist{default{DamageFactor "Magic",    0.1;}}
class Lith_M_Melee5   :Lith_MResist{default{DamageFactor "Melee",    0.1;}}
class Lith_M_Shrapnel5:Lith_MResist{default{DamageFactor "Shrapnel", 0.1; DamageFactor "Explosion", 0.1;}}

class Lith_MonsterBarrier : Actor {
   default {
      RenderStyle "Add";
      XScale 0.3;
      YScale 0.6;
      +NoInteraction
   }

   void lith_moveUp() {
      setOrigin((pos.xy, pos.z + 2.0), true);
   }

   override void tick() {
      if(!isFrozen()) {
         a_fadeOut();
         lith_moveUp();
      }
   }

   states {
   Spawn:
      #EBA A -1;
      stop;
   }
}

class Lith_MonsterHeptaura : Lith_MonsterBarrier {
   default {
      XScale 0.2;
      YScale 0.4;
   }

   override void tick() {
      if(!isFrozen()) {
         a_fadeOut(fRandom[lith_heptaura](0.06, 0.08));
         lith_moveUp();
      }
   }

   states {
   Spawn:
      #EBA B -1;
      stop;
   }
}

class Lith_MonsterSkotosaura : Lith_MonsterBarrier {
   default {
      RenderStyle "Normal";
   }

   states {
   Spawn:
      #EBA C -1;
      stop;
   }
}

class Lith_MonsterFosaura : Lith_MonsterHeptaura {
   states {
   Spawn:
      #EBA D -1;
      stop;
   }
}

class Lith_MonsterFavlosaura : Lith_MonsterHeptaura {
   states {
   Spawn:
      #EBA E -1;
      stop;
   }
}

class Lith_MonsterBulletTrail : Actor {
   default {
      RenderStyle "Add";
      Alpha 0.8;
      Scale 0.8;
      +NoInteraction
   }

   override void tick() {
      if(!isFrozen()) {
         a_fadeOut();
      }
   }

   states {
   Spawn:
      PUFF A -1;
      stop;
   }
}

/* EOF */
