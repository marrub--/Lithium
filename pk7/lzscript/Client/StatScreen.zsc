// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

/* STATUS: Super Totally Awesome Totally Useful Statistics */
class Lith_STATUS : DoomStatusScreen;

Font m_Font;
int  m_Souls;

void Lith_DrawSetq(int x, int y, string text) {
   int lh = m_Font.getHeight() * 3 / 2;
   Screen.DrawText(m_Font, Font.CR_GREEN, x, 60+lh*y, text, DTA_Clean, true);
}

void Lith_DrawPrct(int y, string text, int n, int m) {
   Lith_DrawSetq(50+y*2, y, text);

        if(n < 0) text = "'...)";
   else if(m)     text = "\"" .. int(double(n) / m * 100) .. "%\")";
   else           text = "())";

   Lith_DrawSetq(210, y, text);
}

void Lith_DrawCent(int x, int y, string text) {
   Screen.DrawText(m_Font, Font.CR_GREEN, x - m_Font.stringWidth(text) / 2, y, text, DTA_Clean, true);
}

override void Start(wbstartstruct wbss) {
   m_Font = Lith_URANUS.instance().fntBig();
   m_Souls = random[lith_statscreen](400, 700);
   S_StartSound("intermission/mid", lch_body, CHANF_UI | CHANF_LOOP, 0.43, ATTN_NONE);
   Super.Start(wbss);
}

override void UpdateStats() {
   if(sp_state == 10) {
      PlaySound("intermission/paststats");
      initShowNextLoc();
   } else {
      Super.UpdateStats();
   }
}

override void DrawStats() {
   Lith_DrawPrct(0, "* (setq kills", cnt_kills [0], wbs.maxkills );
   Lith_DrawPrct(1, "* (setq items", cnt_items [0], wbs.maxitems );
   Lith_DrawPrct(2, "* (setq scrts", cnt_secret[0], wbs.maxsecret);

   int souls = Lith_UTIL.pData(_pdt_soulsfreed);
   if(souls) Lith_DrawCent(160, 120, (souls * m_Souls) .. " SOULS FREED");

   Lith_DrawCent(160, 0, "(Leave-Area)");
   textureid nothing;
   nothing.setInvalid();
   DrawName(40 * CleanYFac, nothing, lnametexts[0]);

   if(cnt_time >= 0) {
      Screen.DrawText(m_Font, Font.CR_GREEN, SP_TIMEX, SP_TIMEY, "(time)", DTA_Clean, true);
      DrawTimeFont(m_Font, 160 - SP_TIMEX, SP_TIMEY, cnt_time, Font.CR_GREEN);
      DrawTimeFont(m_Font, 160 - SP_TIMEX, SP_TIMEY + 12, cnt_total_time, Font.CR_GREEN);
   }

   if(wbs.partime && cnt_par >= 0) {
      Screen.DrawText(m_Font, Font.CR_GREEN, 160 + SP_TIMEX, SP_TIMEY, "(par)", DTA_Clean, true);
      DrawTimeFont(m_Font, 320 - SP_TIMEX, SP_TIMEY, cnt_par, Font.CR_GREEN);
   }
}

override void DrawShowNextLoc() {
   bg.drawBackground(CurState, true, snl_pointeron);

   if(bcnt % 20 < 10) Lith_DrawCent(160, 70, "(Enter-Area)");
   textureid nothing;
   nothing.setInvalid();
   DrawName(110 * CleanYFac, nothing, lnametexts[1]);
}

/* EOF */
