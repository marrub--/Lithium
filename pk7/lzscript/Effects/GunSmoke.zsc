// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │           These are originally from LegenDoom. Thanks, Yholl!            │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_GunSmoke : VisualThinker {
   int m_ticks;
   bool m_noTicker;
   override void postBeginPlay() {
      super.postBeginPlay();
      setRenderStyle(STYLE_Add);
      alpha = fRandom[Lith_GunSmoke](.1, .4);
      scale = (0.3, 0.3) * fRandom[Lith_GunSmoke](.07, .14);
      if(random[Lith_GunSmoke](0, 255) < 128) bXFlip = true;
      flags |= SPF_LOCAL_ANIM;
      texture = TexMan.checkForTexture("LITHSM01", TexMan.Type_Any);
   }
   override void tick() {
      super.tick();
      if(!m_noTicker && !isFrozen() && ++m_ticks == 84) destroy();
   }
}

class Lith_GunSmokeBig : Lith_GunSmoke {
   override void postBeginPlay() {
      super.postBeginPlay();
      scale *= 2;
   }
}

class Lith_GunSmokeEmitter : Actor {
   default {
      Radius 4;
      Height 4;
      Speed 7;
      Damage 0;
      Projectile;
      +ThruActors
      +NoClip
   }
   void lith_createSmoke(class<Lith_GunSmoke> cl, vector3 spread, vector3 vel) {
      let smoke = level.spawnVisualThinker(cl);
      smoke.pos = pos +
         (fRandom[Lith_GunSmoke](-spread.x,spread.x),
          fRandom[Lith_GunSmoke](-spread.y,spread.y),
          fRandom[Lith_GunSmoke](-spread.z,spread.z));
      smoke.vel = vel * 0.01;
   }
   override void postBeginPlay() {
      for(int i = 0, n = random[Lith_GunSmoke](5, 7); i < n; i++) {
         lith_createSmoke("Lith_GunSmoke", (1, 1, 1), (0, 0, vel.z));
      }
      destroy();
   }
   states {
   Spawn:
      TNT1 A 1;
      stop;
   }
}

class Lith_GunSmokeAndSparks : Lith_GunSmokeEmitter {
   default {
      Lith_GunSmokeAndSparks.Particles 10;
      Lith_GunSmokeAndSparks.SmokeClass "Lith_GunSmoke";
      Lith_GunSmokeAndSparks.Spread 1;
   }
   meta int m_part;
   meta class<Lith_GunSmoke> m_class;
   meta double m_spread;
   property Particles: m_part;
   property SmokeClass: m_class;
   property Spread: m_spread;
   void lith_spawnSmoke(double vx, double vy) {
      lith_createSmoke(m_class, (4, 1, 2), (vel.x + vx, vel.y + vy, vel.z));
   }
   void lith_spawnParticles(color c) {
      A_SpawnParticle(c, SPF_FULLBRIGHT|SPF_RELATIVE, random[Lith_GunSmoke](3, 8), random[Lith_GunSmoke](1, 2), fRandom[Lith_GunSmoke](-15, 15), fRandom[Lith_GunSmoke](-1,1)*m_spread,fRandom[Lith_GunSmoke](-1,1)*m_spread,fRandom[Lith_GunSmoke](-1,1)*m_spread, fRandom[Lith_GunSmoke](1, 16),fRandom[Lith_GunSmoke](-0.1, 0.1),(vel.z*1.5)+fRandom[Lith_GunSmoke](-1,1), 0.0, 0.0, -0.05, 0.98, -1);
   }
   override void postBeginPlay() {
      setXyz(pos + vel);
      lith_spawnSmoke(0, fRandom[Lith_GunSmoke](-0.2, 0.2));
      for(int i = 0, j = random[Lith_GunSmoke](m_Part + 1, m_Part + 3); i < j; i++) {
         lith_spawnParticles("Yellow");
      }
      if(lith_sv_lessparticles) {
         return;
      }
      for(int i = 0, j = random[Lith_GunSmoke](m_Part + 1, m_Part + 2); i < j; i++) {
         lith_spawnParticles("White");
      }
      for(int i = 0, n = random[Lith_GunSmoke](m_Part/2, m_Part); i < n; i++) {
         lith_spawnSmoke(fRandom[Lith_GunSmoke](-10, 10), fRandom[Lith_GunSmoke](-10, 10));
      }
      destroy();
   }
}

class Lith_GunSmokeAndSparksSmall : Lith_GunSmokeAndSparks {
   default {
      Lith_GunSmokeAndSparks.Particles 5;
   }
}

class Lith_GunSmokeAndSparksBig : Lith_GunSmokeAndSparks {
   default {
      Lith_GunSmokeAndSparks.Particles 15;
      Lith_GunSmokeAndSparks.SmokeClass "Lith_GunSmokeBig";
      Lith_GunSmokeAndSparks.Spread 3;
   }
}

/* EOF */
