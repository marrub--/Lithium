// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_Franca : Lith_Rocket {
   default {
      Speed 30;
      DamageFunction (random[lith_dlweapon](80, 170));
      Translation "Lith_Franca";
      RenderStyle "Translucent";
   }
   override void postBeginPlay() {
      super.postBeginPlay();
      if(Lith_UTIL.pData(_pdt_upgrade, UPGR_Franca_A)) {
         alpha = 0.4;
      }
   }
   override int specialMissileHit(Actor th) {
      if(alpha < 1 && th && th != target) {
         int dmg = getMissileDamage(0, 1);
         dmg = th.damageMobj(self, target, dmg, 'Magic');
         a_startSound("body/flesh", lch_auto);
         bThruActors = true;
         alpha = 1;
         return 1;
      } else {
         return -1;
      }
   }
   states {
   Death:
      TNT1 A 0 {
         A_SetTranslation("");
         A_Explode(bThruActors ? explosionDamage * 4 / 3 : explosionDamage);
         Lith_A_ExplodeSound();
         return Lith_A_DoExplosion();
      }
      stop;
   }
}

class Lith_Sophia : Lith_Rocket {
   default {
      Speed 30;
      DamageFunction (random[lith_dlweapon](80, 170));
      Translation "Lith_Sophia";
      +SeekerMissile
   }
   states {
   SpawnLoop:
      #### # 1 bright {
         Lith_A_SpawnRocketTrail();
         A_SeekerMissile(0, 2, SMF_LOOK);
      }
      loop;
   Death:
      TNT1 A 0 {
         A_SetTranslation("");
         A_Explode();
         Lith_A_ExplodeSound();
         return Lith_A_DoExplosion();
      }
      stop;
   }
}

class Lith_Sophia2 : Lith_Sophia {
   default {
      RenderStyle "Translucent";
      Alpha 0.7;
      Scale 0.49;
      DamageFunction (90);
      Speed 32;
      ExplosionDamage 70;
      Lith_Explosive.FxAmount 0.7;
   }
   states {
   SpawnLoop:
      #### # 1 bright {
         Lith_A_SpawnRocketTrail();
         let dont_seek_me = master && master.tracer ? master.tracer : null;
         bool orig_flag = dont_seek_me && dont_seek_me.bCantSeek;
         if(dont_seek_me) {
            dont_seek_me.bCantSeek = true;
            if(tracer == dont_seek_me) {
               tracer = null;
            }
         }
         A_SeekerMissile(1, 3, SMF_LOOK);
         if(dont_seek_me) {
            dont_seek_me.bCantSeek = orig_flag;
         }
      }
      loop;
   }
}

class Lith_Sophia3 : Lith_Sophia {
   default {
      RenderStyle "Translucent";
      Alpha 0.5;
      Scale 0.29;
      DamageFunction (random[lith_dlweapon](30, 60));
      Speed 48;
      ExplosionDamage 45;
      Lith_Explosive.FxAmount 0.5;
   }
   states {
   SpawnLoop:
      #### # 1 bright {
         Lith_A_SpawnRocketTrail();
         A_SeekerMissile(5, 10, SMF_LOOK|SMF_PRECISE);
      }
      loop;
   }
}

class Lith_DualRocket : Lith_DWeapon;

default {
   Lith_Weapon.SpawnType "Lith_RocketLauncherPickup";
   Tag "$LITH_INFO_SHORT_DualRocket";
   Weapon.SlotNumber 5;
   Weapon.SlotPriority 1;
   Weapon.UpSound "weapons/drocket/draw";
   Lith_Weapon.AmmoType "Lith_RocketAmmo";
   Inventory.AltHudIcon "FRANZ0";
   -Lith_Weapon.HitScan
}

action(Weapon) Actor Lith_A_FireRocket(class<Actor> cl, double side, double xofs = 0.0, double height = 0.0, double angle = 0.0, double recoil = 0.5) {
   Lith_A_GunSmokeAndSparksSmall(side * 2.5);
   lith_gunFlash();
   soundAlert(invoker.owner);
   actor prj = A_FireProjectile(cl, angle, true, side * 7 + xofs, -2+height);
   Lith_A_RecoilUp(2.4 * recoil);
   a_recoil(recoil);
   A_FireProjectile("Lith_LightProjectileRedLong", 0);
   return prj;
}

action(weapon) Actor Lith_A_FireFranca() {
   lith_a_setupFlashOverlay(_psp_double_lf, "FlashLH");
   A_StartSound("weapons/drocket/firel", lch_weapon);
   return Lith_A_FireRocket("Lith_Franca", -1);
}

action(weapon) Actor Lith_A_FireSophia() {
   lith_a_setupFlashOverlay(_psp_double_rf, "FlashRH");
   A_StartSound("weapons/drocket/firer", lch_weapon2);
   class<Actor> cl = Lith_UTIL.pData(_pdt_upgrade, UPGR_Sophia_A)
      ? "Lith_Sophia2"
      : (Lith_UTIL.pData(_pdt_upgrade, UPGR_Sophia_B)
         ? "Lith_Sophia3"
         : "Lith_Sophia");
   return Lith_A_FireRocket(
      cl, 1,
      xofs: Lith_UTIL.pData(_pdt_upgrade, UPGR_Sophia_B)
      ? frandom[lith_dlweapon](-2, 2) : 0.0,
      height: Lith_UTIL.pData(_pdt_upgrade, UPGR_Sophia_B)
      ? frandom[lith_dlweapon](-2, 2) : 0.0,
      angle: Lith_UTIL.pData(_pdt_upgrade, UPGR_Sophia_B)
      ? frandom[lith_dlweapon](-4, 4) : 0.0,
      recoil: Lith_UTIL.pData(_pdt_upgrade, UPGR_Sophia_B)
      ? 0.25 : 0.5);
}

action(weapon) void lith_a_setupFlashOverlay(int psp, stateLabel label) {
   a_overlay(psp, label);
   a_overlayFlags(psp, pspf_renderstyle, true);
   a_overlayRenderStyle(psp, style_add);
}

Actor m_sophia;
int m_times;

states(Weapon) {
Ready:   TNT1 A 1 Lith_A_Ready; wait;
ReadyLH: FRAN A 1; wait;
ReadyRH: SOPH A 1; wait;
Deselect:
   TNT1 A 0 Lith_A_DoubleLower;
   TNT1 A 1 Lith_A_Lower(_raise_normal);
   wait;
Select:
   TNT1 A 0 Lith_A_DoubleRaise;
   TNT1 A 1 Lith_A_Raise(_raise_normal);
   wait;
Fire:
   TNT1 A 10 Lith_A_DoubleState(_oscillate, "FireLH", "FireRH");
   TNT1 A 0 A_ReFire;
   goto ReadySelector;
FireLH:
   TNT1 A 0 lith_jumpNoAmmo(1, "FireEmptyLH");
   FRAN A 0 lith_takeAmmo();
   FRAN A 1 Lith_A_FireFranca;
   goto FireOffsetsLH;
FireEmptyLH:
   FRAN A 0 A_StartSound("weapons/rocket/empty", lch_dryweapon);
FireOffsetsLH:
   #### # 2 Lith_A_DoubleOffset(_lhs, -68, 68, WOF_INTERPOLATE);
   #### # 1 Lith_A_DoubleOffset(_lhs, -46, 46, WOF_INTERPOLATE);
   #### # 2 Lith_A_DoubleOffset(_lhs, -24, 24, WOF_INTERPOLATE);
   #### # 1 Lith_A_DoubleOffset(_lhs, -12, 12, WOF_INTERPOLATE);
   #### # 1 Lith_A_DoubleOffset(_lhs, -8,  8,  WOF_INTERPOLATE);
   #### # 1 Lith_A_DoubleOffset(_lhs, -6,  6,  WOF_INTERPOLATE);
   #### # 2 Lith_A_DoubleOffset(_lhs, -3,  3,  WOF_INTERPOLATE);
   #### # 3 Lith_A_DoubleOffset(_lhs, -1,  1,  WOF_INTERPOLATE);
   #### # 1 Lith_A_DoubleOffset(_lhs,  0,  0,  WOF_INTERPOLATE);
   goto ReadyLH;
FireRH:
   TNT1 A 0 {invoker.m_times = 3;}
   TNT1 A 0 lith_jumpNoAmmo(1, "FireEmptyRH");
   SOPH A 0 lith_takeAmmo();
   #### # 0 a_jumpIf(Lith_UTIL.pData(_pdt_upgrade, UPGR_Sophia_B), "FireRH2");
   SOPH A 1 {invoker.m_sophia = Lith_A_FireSophia();}
   #### # 2 Lith_A_DoubleOffset(_rhs, 68, 68, WOF_INTERPOLATE);
   #### # 1 Lith_A_DoubleOffset(_rhs, 46, 46, WOF_INTERPOLATE);
   #### # 2 Lith_A_DoubleOffset(_rhs, 24, 24, WOF_INTERPOLATE);
   #### # 0 a_jumpIf(!Lith_UTIL.pData(_pdt_upgrade, UPGR_Sophia_A), "FireOffsetsRHEnd");
   #### # 0 {
      let sophia = Lith_A_FireSophia();
      sophia.master = invoker.m_sophia;
   }
   goto FireOffsetsRH;
FireRH2:
   SOPH A 2 {
      Lith_A_FireSophia();
      Lith_A_DoubleOffset(_rhs, 58, 58, WOF_INTERPOLATE);
   }
   #### # 1 Lith_A_DoubleOffset(_rhs, 36, 36, WOF_INTERPOLATE);
   #### # 1 Lith_A_DoubleOffset(_rhs, 24, 24, WOF_INTERPOLATE);
   #### # 0 a_jumpIf(--invoker.m_times, "FireRH2");
   goto FireOffsetsRHEnd;
FireEmptyRH:
   SOPH A 0 A_StartSound("weapons/rocket/empty", lch_dryweapon);
FireOffsetsRH:
   #### # 2 Lith_A_DoubleOffset(_rhs, 68, 68, WOF_INTERPOLATE);
   #### # 1 Lith_A_DoubleOffset(_rhs, 46, 46, WOF_INTERPOLATE);
   #### # 2 Lith_A_DoubleOffset(_rhs, 24, 24, WOF_INTERPOLATE);
FireOffsetsRHEnd:
   #### # 1 Lith_A_DoubleOffset(_rhs, 12, 12, WOF_INTERPOLATE);
   #### # 1 Lith_A_DoubleOffset(_rhs, 8,  8,  WOF_INTERPOLATE);
   #### # 1 Lith_A_DoubleOffset(_rhs, 6,  6,  WOF_INTERPOLATE);
   #### # 2 Lith_A_DoubleOffset(_rhs, 3,  3,  WOF_INTERPOLATE);
   #### # 3 Lith_A_DoubleOffset(_rhs, 1,  1,  WOF_INTERPOLATE);
   #### # 1 Lith_A_DoubleOffset(_rhs, 0,  0,  WOF_INTERPOLATE);
   goto ReadyRH;
FlashLH:
   FRAN BCD 3 bright;
   stop;
FlashRH:
   SOPH BCD 3 bright;
   stop;
}

/* EOF */
