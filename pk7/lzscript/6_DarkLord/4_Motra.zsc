// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Alison G. Watson. Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_Motra : Lith_DWeapon;

default {
   Lith_Weapon.SpawnType "Lith_PistolPickup";
   Lith_Weapon.MagSize 43;
   Lith_Weapon.AdsZoom 0.4;
   Lith_Weapon.DefaultSpeed 1.3;
   Tag "$LITH_INFO_SHORT_Motra";
   Weapon.SlotNumber 4;
   Weapon.SlotPriority 0.9;
   Weapon.UpSound "weapons/motra/draw";
   Lith_Weapon.AdsInSound "weapons/motra/adsin";
   Lith_Weapon.AdsOutSound "weapons/motra/adsout";
   Inventory.AltHudIcon "MOTRZ0";
   +Weapon.NoAutoFire
   +Inventory.Unclearable
   +Lith_Weapon.HitScan
}

action(Weapon) void lith_fireMotra() {
   int accuracy = invoker.m_ads ? 0  : 2;
   int damage   = invoker.m_ads ? 20 : 18;
   int tracerX  = invoker.m_ads ? 0  : 3;
   int smokeX   = invoker.m_ads ? 0  : 1;
   Lith_A_RecoilUp(0.15);
   Lith_FireBullets(accuracy, accuracy, -1, damage, FBF_NORANDOM, puffType: "Lith_BulletPuffPainful", tracerX: tracerX);
   Lith_A_GunSmokeAndSparksSmall(smokeX, 6);
   A_StartSound("weapons/motra/fire", lch_weapon, pitch: FRandom(0.95, 1.2));
}

states(Weapon) {
AltReady:
   MOTR I 1 Lith_A_Ready(WRF_ALLOWRELOAD|WRF_ALLOWUSER1);
   loop;
Ready:
   MOTR A 1 Lith_A_Ready(WRF_ALLOWRELOAD|WRF_ALLOWUSER1);
   loop;

Deselect:
   MOTR A 1 Lith_A_Lower(_raise_fast);
   wait;
Select:
   MOTR A 1 Lith_A_Raise(_raise_fast);
   wait;

User1:
   #### # 1;
   #### # 0 lith_a_adsToggle;
   goto ReadySelector;
AdsIn:
   MOTR A 1 offset(-2, 35);
   MOTR H 1 offset(160, 58);
   MOTR H 1 offset(143, 64);
   MOTR H 1 offset(127, 76);
   MOTR I 1 offset(7, 40);
   MOTR I 1 offset(2, 35);
   MOTR I 1 offset(1, 32);
   goto ReadySelector;
AdsOut:
   MOTR I 1 offset(0, 30);
   MOTR I 1 offset(1, 31);
   MOTR H 1 offset(125, 71);
   MOTR H 1 offset(141, 60);
   MOTR H 1 offset(165, 55);
   MOTR A 1 offset(-1, 36);
   MOTR A 1 offset(1, 34);
   MOTR A 1 offset(1, 32);
   goto ReadySelector;

Fire:
   #### # 0 Lith_A_JumpIfMagEmpty;
   #### # 0 Lith_A_MagIncr;
   #### # 0 lith_fireMotra;
   #### # 0 A_JumpIf(invoker.m_ads, "FireFinish_Ads");
FireFinish:
   MOTR B 1 offset(183, 72);
   #### # 0 lith_a_setInterpolation(true);
   MOTR B 1 offset(181, 69);
   MOTR C 1 offset(173, 63);
   MOTR D 1 offset(175, 67);
   MOTR A 0 offset(1, 32);
   goto FireFinish_Common;
FireFinish_Ads:
   #### # 0 A_Jump(128, "FireFinish_Ads_2");
FireFinish_Ads_1:
   #### # 0 lith_a_setInterpolation(true);
   MOTR K 1 offset(88, 65);
   MOTR K 1 offset(95, 58);
   MOTR J 1 offset(105, 66);
   MOTR J 1 offset(100, 70);
   MOTR I 0 offset(1, 32);
   goto FireFinish_Common;
FireFinish_Ads_2:
   #### # 0 lith_a_setInterpolation(true);
   MOTR M 1 offset(99, 65);
   MOTR M 1 offset(89, 58);
   MOTR L 1 offset(101, 66);
   MOTR L 1 offset(110, 70);
   MOTR I 0 offset(1, 32);
FireFinish_Common:
   #### # 0 lith_a_setInterpolation(false);
   #### # 0 a_reFire;
   goto ReadySelector;

FireEmpty:
   #### # 2 offset(3, 38);
   #### # 1 offset(7, 40);
   #### # 1 offset(5, 37) A_StartSound("weapons/empty", lch_dryweapon);
   #### # 1 offset(4, 34);
   #### # 1 offset(2, 33);
   #### # 5 offset(1, 32);
   goto ReadySelector;

Reload:
   #### # 0 Lith_A_JumpIfMagFull;
   #### # 0 lith_a_setInterpolation(true);
   #### # 0 A_JumpIf(!invoker.m_ads, "Reload2");
Reload1:
   #### # 0 lith_a_adsZoomOut;
   MOTR I 1 offset(0, 30);
   MOTR I 1 offset(1, 31);
   MOTR H 1 offset(125, 71);
   MOTR H 1 offset(141, 60);
   MOTR H 1 offset(165, 55);
   MOTR A 1 offset(-1, 36);
   MOTR A 1 offset(1, 34);
   MOTR A 1 offset(1, 32);
Reload2:
   MOTR A 1 offset(1, 38);
   MOTR D 1 offset(165, 66);
   MOTR D 1 offset(159, 68);
   MOTR D 1 offset(151, 73);
   MOTR E 1 offset(145, 80);
   MOTR E 1 offset(141, 84);
   MOTR E 1 offset(135, 91);
   MOTR E 1 offset(128, 97);
   MOTR F 1 offset(113, 109);
   MOTR F 1 offset(87, 127);
   MOTR G 4 offset(45, 138);
   MOTR G 1 offset(39, 133);
   MOTR G 1 offset(35, 127) lith_a_reloadBobUp(0.5);
   MOTR G 1 offset(30, 127) A_StartSound("weapons/motra/out", lch_reload);
   MOTR G 1 offset(-1, 118) Lith_A_DropMag("Lith_MotraMagazine", "Lith_MotraMagazine2", 0,10,24, 0,FRandom(0,4),0);
   MOTR G 1 offset(-33, 111);
   MOTR G 1 offset(-35, 110);
   MOTR G 2 offset(-37, 109);
   MOTR G 3 offset(-35, 109);
   MOTR G 8 offset(-32, 110);
   MOTR G 5 offset(-33, 108);
   MOTR G 1 offset(-22, 117);
   MOTR G 1 offset(-19, 127) lith_a_reloadBobDn(0.5);
   MOTR G 1 offset(-16, 139);
   MOTR G 3 offset(2, 161) A_StartSound("weapons/motra/in", lch_reload);
   MOTR G 1 offset(2, 155) Lith_A_ReloadFinish;
   MOTR G 3 offset(-4, 150);
   MOTR G 2 offset(27, 154);
   MOTR G 1 offset(67, 148);
   MOTR F 1 offset(134, 134);
   MOTR F 1 offset(142, 121);
   MOTR D 1 offset(159, 112);
   MOTR A 1 offset(-7, 75);
   MOTR A 1 offset(-3, 68);
   MOTR A 1 offset(1, 54);
   MOTR A 1 offset(1, 49);
   MOTR A 1 offset(1, 39);
   MOTR A 1 offset(1, 32);
   #### # 0 A_JumpIf(!invoker.m_ads, "Reload4");
Reload3:
   #### # 0 lith_a_adsZoomFactor;
   MOTR A 1 offset(-2, 35);
   MOTR H 1 offset(160, 58);
   MOTR H 1 offset(143, 64);
   MOTR H 1 offset(127, 76);
   MOTR I 1 offset(7, 40);
   MOTR I 1 offset(2, 35);
   MOTR I 1 offset(1, 32);
Reload4:
   MOTR A 0 lith_a_setInterpolation(false);
   goto ReadySelector;
}

/* EOF */
