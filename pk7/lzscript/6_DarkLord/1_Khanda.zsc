// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Alison G. Watson. Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_StatSkillPower : Lith_StatFx {
   override void initCb() {basic("SKP", 35 * 5);}
}

extend class Lith_HERMES {
   static bool KhandaPower(Actor mo) {
      Lith_StatFx.addToPool('Lith_StatSkillPower');
      return false;
   }
}

class Lith_KhandaPuff : Lith_BulletPuff {
   default {
      Mass 5;
      +PuffOnActors
      +ThruGhost
   }
   override void postBeginPlay() {
      super.postBeginPlay();
      if(tracer) {
         if(!tracer.bNoBlood && !tracer.bDormant) {
            a_startSound("body/flesh", lch_auto);
            a_quakeEx(1, 1, 0, 5, 0, 256);
         } else {
            a_quakeEx(0.7, 0.7, 0, 5, 0, 256);
         }
         if(target) {
            target.a_startSound("weapons/sword/hit", lch_weapon3);
         }
      } else if(target) {
         target.a_startSound("weapons/sword/swing1", lch_weapon3);
         a_quakeEx(0.1, 0.1, 0, 10, 0, 128);
      }
   }
   override void markPrecacheSounds() {
      super.markPrecacheSounds();
      markSound("weapons/sword/swing1");
      markSound("weapons/sword/hit");
      markSound("body/flesh");
   }
}

class Lith_Khanda : Lith_DWeapon;

default {
   Lith_Weapon.SpawnType "Lith_FistPickup";
   Lith_Weapon.DefaultSpeed 1.9;
   Lith_Weapon.SprintSpeed 2.1;
   Tag "$LITH_INFO_SHORT_Khanda";
   Weapon.SlotNumber 1;
   Weapon.SlotPriority 0.9;
   Weapon.UpSound "weapons/khanda/draw";
   Inventory.AltHudIcon "KHANZ0";
   +Lith_Weapon.HitScan
}
bool m_power;
override void markPrecacheSounds() {
   super.markPrecacheSounds();
   markSound("weapons/khanda/swing");
   markSound("weapons/khanda/pwup");
}
override void tick() {
   super.tick();
   m_power = Lith_StatFx.getInPool('Lith_StatSkillPower');
}
int lith_damageMul() {
   return (m_power ? 50 : 1) * (countInv("PowerStrength") ? 3 : 1);
}
action(weapon) void lith_a_fireKhanda(int damage) {
   if(lith_a_fireMelee(invoker.lith_damageMul() * damage, 128, _mlf_pull_in|_mlf_no_turn, "Lith_KhandaPuff")) {
      a_quake(1, 3, 0, 128);
   }
}
states(Weapon) {
PowerOverlay:
   TNT1 A 1 {
      let wep = player.findPSprite(_psp_weapon);
      let psp = player.findPSprite(_psp_d_khanda_power);
      if(wep && psp) {
         Lith_UTIL.copyPSpriteVisualData(psp, wep);
         a_overlayFlags(_psp_d_khanda_power, pspf_renderstyle|pspf_alpha, true);
         a_overlayRenderStyle(_psp_d_khanda_power, STYLE_Add);
         psp.alpha = (sin(gameTic / 17.5 * 360) + 1.0) / 2.5;
         psp.x = psp.y = psp.oldx = psp.oldy = 0;
         psp.bAddWeapon = true;
         psp.translation = Translate.getId('Lith_KhandaPower');
      }
      if(!invoker.m_power) {
         if(psp && psp.alpha > 0) {
            psp.alpha -= 0.1;
         }
         if(!psp || psp.alpha <= 0) {
            return resolveState("Null");
         }
      }
      return state(null);
   }
   wait;
Ready:
   KHAN A 1 {
      if(invoker.m_power) {
         a_overlay(_psp_d_khanda_power, "PowerOverlay", true);
      }
      return lith_a_ready(WRF_ALLOWRELOAD);
   }
   wait;
Deselect:
   KHAN A 1 lith_a_lower(_raise_fast);
   wait;
Select:
   KHAN A 1 lith_a_raise(_raise_fast);
   wait;
Fire:
   KHAN A 1 offset(-35, 32);
   #### # 0 lith_a_setInterpolation(true);
   KHAN B 1 offset(-165, 137);
   KHAN B 1 offset(-190, 134);
   KHAN C 2 offset(-198, 124);
   KHAN C 3 offset(-205, 126);
Hold:
   #### # 0 lith_a_recoilDn(1);
   KHAN D 1 offset(-103, 143) a_startSound("weapons/khanda/swing", lch_weapon);
   #### # 0 lith_a_setInterpolation(true);
   KHAN E 1 offset(163, 120) lith_a_fireKhanda(40);
   #### # 0 lith_a_setInterpolation(false);
   KHAN E 1 offset(259, 175);
   TNT1 A 5 a_weaponOffset(0, 32);
   KHAN F 1 offset(148, 170);
   #### # 0 lith_a_setInterpolation(true);
   KHAN G 1 offset(80, 98) a_startSound("weapons/khanda/swing", lch_weapon2);
   KHAN H 1 offset(-25, 40) lith_a_fireKhanda(50);
   KHAN H 1 offset(-130, 12);
   #### # 0 lith_a_setInterpolation(false);
   KHAN I 1 offset(-124, -21);
   TNT1 A 5 a_weaponOffset(0, 32);
   TNT1 A 0 a_reFire;
   KHAN A 3 offset(-126, 71);
   #### # 0 lith_a_setInterpolation(true);
   KHAN A 1 offset(-88, 43);
   KHAN A 1 offset(-50, 32);
   KHAN A 1 offset(-15, 32);
   KHAN A 1 offset(-4, 32);
   #### # 0 lith_a_setInterpolation(false);
   KHAN A 1 offset(-1, 32);
   goto ReadySelector;
}

/* EOF */
