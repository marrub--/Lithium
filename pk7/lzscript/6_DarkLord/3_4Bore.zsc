// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_4BoreDamageBuff : Inventory {
   default {
      Inventory.MaxAmount 8;
   }
   override void postBeginPlay() {
      destroy();
   }
}

class Lith_4BorePuff : Lith_BulletPuff {
   default {
      Scale 2;
      +PuffOnActors
   }
   static const color[] CRS = {
      "#f4bf5f",
      "#f48f55",
      "#f4594c",
      "#f44368",
      "#c93347",
      "#9f242c",
      "#741918",
      "#4a130e"
   };
   override void postBeginPlay() {
      super.postBeginPlay();
      if(tracer && target && Lith_UTIL.pData(_pdt_upgrade, UPGR_4Bore_A)) {
         int bonus = tracer.countInv('Lith_4BoreDamageBuff');
         tracer.giveInventory('Lith_4BoreDamageBuff', 1);
         if(bonus) {
            tracer.damageMobj(target, self, 15 * bonus, 'None', DMG_USEANGLE|DMG_PLAYERATTACK);
            Lith_URANUS.instance().particle4BoreDamageBuff(pos, CRS[bonus]);
         }
      }
   }
}

class Lith_4Bore : Lith_DWeapon;

default {
   Lith_Weapon.SpawnType "Lith_SuperShotgunPickup";
   Lith_Weapon.AdsZoom 0.4;
   Tag "$LITH_INFO_SHORT_4Bore";
   Weapon.SlotNumber 3;
   Weapon.SlotPriority 0.9;
   Weapon.UpSound "weapons/4bore/draw";
   Lith_Weapon.AmmoType "Lith_ShellAmmo";
   Inventory.AltHudIcon "4BORZ0";
   +Lith_Weapon.HitScan
}

override void markPrecacheSounds() {
   super.markPrecacheSounds();
   markSound("weapons/empty");
   markSound("weapons/4bore/fire");
   markSound("weapons/4bore/open");
   markSound("weapons/4bore/load");
   markSound("weapons/4bore/close");
   markSound("weapons/4bore/empty");
}

action(Weapon) void Lith_A_Fire4Bore(double recoil = 1) {
   SoundAlert(Invoker.Owner);
   lith_takeAmmo(4);
   A_SetBlend("White", 0.2, 6);
   lith_gunFlash();
   soundAlert(invoker.owner);
   Lith_GunSmoke("Lith_GunSmokeAndSparksBig", 1, 6);
   A_FireProjectile("Lith_LightProjectileRedLong", 0);
   Lith_FireBullets(4, 2, 8, random[lith_dlweapon](77, 94), FBF_NORANDOM, puffType: 'Lith_4BorePuff', tracerX: 2, tracer: _tr_big);
   Lith_A_RecoilUp(10 * recoil);
   a_recoil(4 * recoil);
}

action(Weapon) void Lith_A_4BoreOut() {
   A_StartSound("weapons/4bore/open", lch_reload);
   Lith_A_Casing("Lith_Cas4Bore", 15, -1, 40, FRandom(3,4), FRandom(7,8), FRandom(2,9));
   Lith_A_Casing("Lith_Cas4Bore", 15, -4, 40, FRandom(3,4), FRandom(7,8), FRandom(2,9));
}

override bool lith_adsShouldHappen() {
   return Lith_UTIL.pData(_pdt_upgrade, UPGR_4Bore_B);
}

states(Weapon) {
AltReady:
   4BOR P 1 Lith_A_Ready(WRF_ALLOWUSER1);
   loop;
Ready:
   4BOR A 1 Lith_A_Ready(invoker.lith_adsShouldHappen() ? WRF_ALLOWUSER1 : 0);
   loop;

Deselect:
   4BOR A 1 Lith_A_Lower(_raise_normal);
   loop;
Select:
   4BOR A 1 Lith_A_Raise(_raise_normal);
   loop;

User1:
   #### # 1;
   #### # 0 lith_a_adsToggle;
   goto ReadySelector;
AdsIn:
   4BOR AKLMNO 1;
   goto ReadySelector;
AdsOut:
   4BOR ONMLKA 1;
   goto ReadySelector;

Fire_Ads:
   4BOR P 5;
   4BOR P 1 offset(0, 48);
   4BOR P 1 offset(0, 50);
   4BOR Q 1 bright offset(1, 32) Lith_A_Fire4Bore(0.5);
   4BOR R 1;
   #### # 0 lith_a_setInterpolation(true);
   4BOR R 1 offset(-1, 34);
   4BOR S 1 offset(1, 32);
   4BOR S 1 offset(-3, 34);
   4BOR T 1 offset(1, 32);
   4BOR T 1 offset(-5, 36);
   4BOR U 1 offset(1, 32);
   4BOR U 1 offset(-7, 38);
   4BOR V 1 offset(1, 32) Lith_A_4BoreOut;
   goto FireFinish;
Fire:
   #### # 0 lith_jumpNoAmmo(4);
   #### # 0 A_StartSound("weapons/4bore/fire", lch_weapon);
   #### # 0 A_JumpIf(invoker.m_ads, "Fire_Ads");
   4BOR A 7;
   4BOR B 1 bright offset(1, 32) Lith_A_Fire4Bore;
   4BOR H 1 bright;
   4BOR H 1 bright offset(20, 48);
   4BOR G 1 offset(55, 90);
   4BOR G 1 offset(50, 85);
   4BOR A 1 offset(45, 80);
   #### # 0 lith_a_setInterpolation(true);
   4BOR A 1 offset(30, 60);
   4BOR A 1 offset(25, 50);
   4BOR A 1 offset(20, 48);
   4BOR A 1 offset(15, 45);
   4BOR A 1 offset(11, 44);
   4BOR A 1 offset(8, 41);
   4BOR A 1 offset(5, 39);
   4BOR A 1 offset(3, 36);
   4BOR A 1 offset(2, 34);
   4BOR A 1 offset(-3, 32);
   4BOR A 1 offset(-5, 32);
   4BOR A 1 offset(-10, 33);
   4BOR A 1 offset(-22, 36);
   #### # 0 lith_a_setInterpolation(false);
   4BOR C 1 offset(19, 130);
   #### # 0 lith_a_setInterpolation(true);
   4BOR C 1 offset(4, 135);
   4BOR C 1 offset(-22, 143);
   #### # 0 lith_a_setInterpolation(false);
   4BOR D 1 offset(-28, 166) Lith_A_4BoreOut;
   #### # 0 lith_a_setInterpolation(true);
   4BOR D 1 offset(-41, 172);
   4BOR D 1 offset(-56, 186);
   4BOR D 1 offset(-71, 201);
FireFinish:
   #### # 0 lith_a_setInterpolation(false);
   TNT1 AAAAAAAAAAAA 1 lith_a_ready(WRF_NOFIRE|WRF_NOSWITCH, "FireFinish");
   TNT1 A 6 A_StartSound("weapons/4bore/load", lch_reload2);
   4BOR F 1 offset(-43, 182) Lith_A_ReloadBobUp(1);
   #### # 0 lith_a_setInterpolation(true);
   4BOR F 1 offset(-30, 162);
   4BOR F 1 offset(-25, 155);
   4BOR F 1 offset(-8, 137);
   4BOR E 2 offset(55, 96) A_StartSound("weapons/4bore/close", lch_reload3);
   4BOR E 1 offset(59, 95);
   4BOR E 3 offset(60, 97);
   4BOR E 1 offset(60, 95);
   4BOR E 2 offset(61, 98);
   4BOR E 2 offset(63, 96);
   #### # 0 lith_a_setInterpolation(false);
   4BOR C 1 offset(-2, 112);
   #### # 0 A_JumpIf(invoker.m_ads, "FireEnd_Ads");
FireEnd:
   4BOR C 1 offset(11, 115);
   4BOR A 1 offset(-27, 32);
   4BOR A 1 offset(-4, 35);
   4BOR A 1 offset(5, 33);
   goto ReadySelector;
FireEnd_Ads:
   #### # 0 lith_a_setInterpolation(true);
   4BOR C 1 offset(15, 115);
   4BOR C 1 offset(32, 117);
   4BOR M 1 offset(1, 32);
   4BOR N 2;
   4BOR O 3;
   goto ReadySelector;
FireEmpty:
   #### # 2 offset(3, 38);
   #### # 1 offset(7, 40);
   #### # 1 offset(5, 37) A_StartSound("weapons/4bore/empty", lch_dryweapon);
   #### # 1 offset(4, 34);
   #### # 1 offset(2, 33);
   #### # 5 offset(1, 32);
   goto ReadySelector;
}

/* EOF */
