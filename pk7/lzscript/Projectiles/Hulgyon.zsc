// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_HulgyonHit : Actor
{
   default
   {
      DamageType "Magic";

      +NOGRAVITY
      +THRUACTORS
   }

   override void markPrecacheSounds() {
      super.markPrecacheSounds();
      markSound("weapons/hulgyon/proc");
   }
   void Lith_A_Spawn(double z)
   {
      A_SpawnItemEx("Lith_HulgyonEffect", 0,0,z  , flags: SXF_TRANSFERPOINTERS);
      A_SpawnItemEx("Lith_HulgyonEffect", 0,0,z+4, flags: SXF_TRANSFERPOINTERS);
   }

   states
   {
   Spawn:
      TNT1 A 0;
      TNT1 A 0 soundAlert(target);
      TNT1 A 0 A_StartSound("weapons/hulgyon/proc", lch_body);
      TNT1 A 1 Lith_A_Spawn(0);
      TNT1 A 1 Lith_A_Spawn(10);
      TNT1 A 1 Lith_A_Spawn(20);
      TNT1 A 1 Lith_A_Spawn(30);
      TNT1 A 1 Lith_A_Spawn(40);
      stop;
   }
}

class Lith_HulgyonProjectile : Actor
{
   default
   {
      Damage 0;
      Height 16;
      Radius 4;
      RenderStyle "Add";
      Speed 30;
      XScale 4;

      Projectile;
      +FLOORHUGGER
      +RIPPER
      +BRIGHT
   }

   double m_LZ;

   state Lith_A_Step()
   {
      if(Pos.Z - m_LZ > 48 || Pos.Z - m_LZ < -48) return ResolveState("Null");
      m_LZ = Pos.Z;
      return null;
   }

   states
   {
   Spawn:
      BLLT J 0;
      BLLT J 0 {m_LZ = Pos.Z;}
   SpawnLoop:
      BLLT JJJ 1 Lith_A_Step;
      BLLT J 0 A_SpawnItemEx("Lith_HulgyonHit", flags: SXF_TRANSFERPOINTERS);
      BLLT JJ 1 Lith_A_Step;
      loop;
   }
}

/* EOF */
