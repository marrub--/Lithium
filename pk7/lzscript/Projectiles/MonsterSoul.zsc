// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_MonsterSoulEffect : Actor
{
   default
   {
      RenderStyle "Add";
      Scale 0.25;

      +NOTIMEFREEZE
      +NOINTERACTION
      +BRIGHT
   }

   states
   {
   Spawn:
      BLLT N 0 A_SetScale(scale.x * 0.9);
      BLLT N 1 A_FadeOut;
      loop;
   }
}

class Lith_MonsterSoul : Actor;

default {
   RenderStyle "Add";
   Scale 0.25;
   Damage 7;
   Radius 4;
   Height 4;
   Speed 7;
   Projectile;
   +SEEKERMISSILE
   +MTHRUSPECIES
   +THRUSPECIES
   +BRIGHT
}
override void markPrecacheSounds() {
   super.markPrecacheSounds();
   markSound("ghost/spawn");
   markSound("ghost/hit");
}
states {
Spawn:
   BLLT N 0;
   BLLT N 0 A_StartSound("ghost/spawn", lch_body, attenuation: 0.5);
   BLLT N 0 ThrustThingZ(0, 4, 0, 0);
SpawnLoop:
   BLLT N 0 A_SpawnItemEx("Lith_MonsterSoulEffect");
   BLLT N 0 A_SeekerMissile(0, 360, SMF_LOOK|SMF_PRECISE, 256, 1);
   BLLT N 1 A_FadeOut(0.05);
   loop;
Death:
   BLLT N 0 A_StartSound("ghost/hit", lch_body, attenuation: 0.5);
   TNT1 AAAAAAAAAAAA 0 A_SpawnItemEx("Lith_MonsterSoulEffect", 0,0,0, frandom(-2,2),frandom(-2,2),frandom(-2,2));
   stop;
}

/* EOF */
