// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_PoisonBlob : Actor {
   default {
      Alpha 1;
      Mass 20;
      RenderStyle "Translucent";
      Scale 0.5;
      +Bright
      +NoBlockmap
      +NoClip
      -NoGravity
   }
   override void markPrecacheSounds() {
      super.markPrecacheSounds();
      markSound("weapons/shotgun/poison/acid");
   }
   states {
   Spawn:
      BLLT G 5;
      BLLT G 0 a_startSound("weapons/shotgun/poison/acid", lch_body);
   SpawnLoop:
      BLLT G 0 a_jumpIf(pos.z == floorZ, "Crash"); /* >:I */
      BLLT G 1 a_fadeOut(0.01);
      loop;
   Crash:
      RADB ABCDEFGHIJKLM 1 a_fadeOut(0.01);
      wait;
   }
}

class Lith_PoisonBullet : Lith_BulletPuff {
   default {
      Alpha 0.9;
      DamageType "Bullet";
      RenderStyle "Add";
      +NoExtremeDeath
      +PuffOnActors
   }

   override void postBeginPlay() {
      super.postBeginPlay();
      for(int i = 0; i < 5; i++) {
         a_spawnItemEx("Lith_PoisonBlob", 0,0,0, fRandom(-1,1),fRandom(-1,1),fRandom(2,6), 0, 0, 64);
      }
      if(tracer && !tracer.bDormant) {
         let ticker = Lith_PoisonTicker(tracer.findinventory("Lith_PoisonTicker"));
         if(!ticker) {
            ticker = Lith_PoisonTicker(tracer.giveInventoryType("Lith_PoisonTicker"));
         }
         ticker.m_end = 70;
         ticker.target = target;
      }
   }
}

class Lith_PoisonTicker : Inventory;

int m_end;

override void markPrecacheSounds() {
   super.markPrecacheSounds();
   markSound("weapons/shotgun/poison/acid");
}

override void tick() {
   if(isFrozen()) {
      return;
   }
   if(!owner || owner.health <= 0 || m_end-- <= 0) {
      destroy();
      return;
   }
   if(level.time & 7 == 0) {
      int dmg = Lith_UTIL.pData(_pdt_attr, at_acc) / 4;
      owner.damageMobj(target, target, 10 + dmg, 'Poison');
      owner.a_startSound("weapons/shotgun/poison/acid", lch_body3, attenuation: 0.5);
      Lith_CopyEffect.create("Lith_PoisonFx", owner);
   }
}

/* EOF */
