// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_GaussExplosionParticle : Actor {
   default {
      RenderStyle "Add";
      Scale 0.4;
      Mass 3000;
      BounceType "Doom";
      +Bright
      +NoBlockmap
      +ForceXyBillboard
      +NoTeleport
      +NoClip
   }
   states {
   Spawn:
      BLLT B 0;
      BLLT BBBCCCDDD 1 bright A_FadeOut(0.06);
      wait;
   }
}

class Lith_GaussPuff : Actor;

default {
   RenderStyle "Translucent";
   DamageType "Electric";
   +Bright
   +PuffOnActors
   +PuffGetsOwner
   +NoGravity
   +NoBlockmap
   +FloorClip
   +ForceXyBillboard
   +NoTeleport
   +WallSprite
   -AllowParticles
}
override void markPrecacheSounds() {
   super.markPrecacheSounds();
   markSound("weapons/shotgun/gauss/puff");
   markSound("weapons/shotgun/gauss/spark");
}
states {
Crash:
   BLLT A 0;
   BLLT A 0 A_StartSound("weapons/shotgun/gauss/puff", lch_body);
   BLLT A 1 A_FadeOut(0.05);
   wait;
Spawn:
Melee:
   BLLT A 0;
   BLLT A 0 {
      A_StartSound("weapons/shotgun/gauss/puff", lch_body);
      A_StartSound("weapons/shotgun/gauss/spark", lch_body2);
      for(int i = 0; i < 9; i++)
         A_SpawnItemEx("Lith_GaussExplosionParticle", FRandom(-4, 4),FRandom(-4, 4),FRandom(-8, 8), FRandom(-4, 4),FRandom(-4, 4),FRandom(4, 7), 0, SXF_NOCHECKPOSITION);
   }
   BLLT A 1 A_FadeOut(0.1);
   wait;
}

/* EOF */
