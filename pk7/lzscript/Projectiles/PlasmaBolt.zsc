// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_PlasmaBoltTrail : Actor {
   default {
      Alpha 0.2;
      RenderStyle "Add";
      Scale 0.125;
      +NOINTERACTION
   }

   states {
   Spawn:
      TNT1 A 0;
      TNT1 A 0 ResolveState("Particles");
   SpawnPick:
      TNT1 A 0 A_Jump(256, "SpawnA", "SpawnB");
   SpawnA:
      PBAL A 1 bright;
      stop;
   SpawnB:
      PBAL B 1 bright;
      stop;
   }
}

class Lith_PlasmaBoltTrail_Green : Lith_PlasmaBoltTrail {
   states {
   Particles:
      TNT1 A 0 A_SpawnParticle("Green", SPF_FULLBRIGHT, 6, 2, 0, 0,0,0, frandom(-2, 2),frandom(-2, 2),frandom(-2, 2));
      goto SpawnPick;
   }
}

class Lith_PlasmaBoltTrail_Red : Lith_PlasmaBoltTrail {
   default {
      Translation "Lith_AllToRed";
   }
   states {
   Particles:
      TNT1 A 0 A_SpawnParticle("Red", SPF_FULLBRIGHT, 6, 2, 0, 0,0,0, frandom(-2, 2),frandom(-2, 2),frandom(-2, 2));
      goto SpawnPick;
   }
}

class Lith_PlasmaBoltTrail_Blue : Lith_PlasmaBoltTrail {
   default {
      Translation "Lith_AllToBlueBright";
      Alpha 0.5;
   }
   states {
   Particles:
      TNT1 A 0 A_SpawnParticle("Blue", SPF_FULLBRIGHT, 6, 2, 0, 0,0,0, frandom(-2, 2),frandom(-2, 2),frandom(-2, 2));
      goto SpawnPick;
   }
}

class Lith_PenetratingPlasmaBolt : Lith_PlasmaBolt {
   default {
      DamageFunction 7;
      Speed 47;

      +RIPPER
   }
   override void markPrecacheSounds() {
      super.markPrecacheSounds();
      markSound("weapons/plasma/explode");
   }
   states {
   Trail:
      TNT1 A 0 A_JumpIf(m_TrailStep >= 10, "TrailDone");
      TNT1 A 0 {m_TrailStep++;}
      TNT1 A 0 A_SpawnItemEx("Lith_PlasmaBoltTrail_Red", ((m_TrailStep * 10.0) * vel.x) / -35.0, -((m_TrailStep * 10.0) * vel.y) / -35.0, 2.0 + ((m_TrailStep * 10.0) * vel.z) / -35.0, flags: SXF_ABSOLUTEANGLE | SXF_NOCHECKPOSITION);
      loop;
   TrailDone:
      TNT1 A 0 {m_TrailStep = 0;}
      goto Step;
   Death:
      TNT1 AAAA 0 A_SpawnParticle("Red", SPF_FULLBRIGHT, 15, 4, 0, frandom(-5, 5),frandom(-5, 5),frandom(-5, 5), frandom(-5, 5),frandom(-5, 5),frandom(-5, 5));
      TNT1 A 2 A_StartSound("weapons/plasma/explode", lch_body);
      stop;
   }
}

class Lith_PlasmaBolt : Actor;

default {
   Radius 12;
   Height 12;
   Speed 50;
   DamageFunction 12;
   DamageType "Electric";
   Projectile;
}

int m_TrailStep;
override void markPrecacheSounds() {
   super.markPrecacheSounds();
   markSound("weapons/plasma/explode");
}
states {
Spawn:
   TNT1 A 3;
   TNT1 A 0 ResolveState("Trail");
Trail:
   TNT1 A 0 A_JumpIf(m_TrailStep >= 5, "TrailDone");
   TNT1 A 0 {m_TrailStep++;}
   TNT1 A 0 A_SpawnItemEx("Lith_PlasmaBoltTrail_Green", ((m_TrailStep * 10.0) * vel.x) / -35.0, -((m_TrailStep * 10.0) * vel.y) / -35.0, 2.0 + ((m_TrailStep * 10.0) * vel.z) / -35.0, flags: SXF_ABSOLUTEANGLE | SXF_NOCHECKPOSITION);
   loop;
TrailDone:
   TNT1 A 0 {m_TrailStep = 0;}
   goto Step;
Step:
   TNT1 A 1;
   TNT1 A 0 ResolveState("Trail");
Death:
   TNT1 AAAA 0 A_SpawnParticle("Green", SPF_FULLBRIGHT, 15, 4, 0, frandom(-5, 5),frandom(-5, 5),frandom(-5, 5), frandom(-5, 5),frandom(-5, 5),frandom(-5, 5));
   TNT1 A 2 A_StartSound("weapons/plasma/explode", lch_body);
   stop;
}

/* EOF */
