// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_700Explosion : Actor {
   default {
      Scale 0.4;
      RenderStyle "Add";
      +Bright
      +NoBlockmap
      +NoGravity
   }

   int m_ticks;

   override void tick() {
      if(!isFrozen()) {
         Lith_UTIL.stateTick(self);
      }
      if(tracer) {
         setOrigin(tracer.pos, true);
      }
   }

   states {
   Spawn:
      RDGL A 1 light("Lith_CircleLightSmall") {
         scale.x = scale.y = fRandom(0.2, 0.6);
         return a_jumpIf(++m_ticks > 25, "Death");
      }
      loop;
   Death:
      MICX A 1 {
         scale = (0.4, 0.4);
         a_explode(80, 200, 0);
         a_startSound("weapons/700e/explode", lch_body);
      }
      MICX BC 2;
      MICX D 3;
      MICX EF 2;
      MICX G 4;
      stop;
   }
}

class Lith_700Bullet : Lith_BulletPuffPainless;

default {
   Mass 10;
   Scale 1.5;
   DamageType "Bullet";
   +PuffOnActors
   +NoExtremeDeath
}

override void postBeginPlay() {
   super.postBeginPlay();
   if(Lith_UTIL.pData(_pdt_upgrade, UPGR_700E_A)) {
      let mo = spawn("Lith_700Explosion", tracer ? tracer.pos : pos);
      mo.tracer = tracer;
      mo.target = target;
      if(tracer) {
         mo.worldOffset = pos - tracer.pos;
      }
   } else {
      if(tracer) {
         a_explode(35, 200, xf_nosplash);
      } else {
         a_explode(18, 100, xf_nosplash);
      }
   }
}

/* EOF */
