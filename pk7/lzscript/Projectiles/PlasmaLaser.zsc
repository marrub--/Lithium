// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_PlasmaHit : Lith_PlasmaLaze {
   default {
      RenderStyle "Add";
      Alpha 0.25;
      Scale 0.65;
      DamageType "Electric";
      +Bright
      +NoInteraction
      +PuffOnActors
      +PuffGetsOwner
      +NoGravity
      +NoBlockMap
      +FloorClip
      +ExtremeDeath
      +ForceXyBillboard
      -AllowParticles
   }
   override void markPrecacheSounds() {
      super.markPrecacheSounds();
      markSound("weapons/laser/spark");
   }
   states {
   Crash:
      BLL2 A 0;
      BLL2 A 0 A_JumpIf(level.time % 3, "Null");
      BLL2 A 0 A_StartSound("weapons/plasma/laser/spark", lch_body, CHANF_LOOP);
   PrettiesLoop:
      BLL2 A 0 A_JumpIf(Alpha >= 1, "PrettiesDone");
      BLL2 A 1 light("Lith_FinalizerLight") A_FadeIn(0.07);
      loop;
   PrettiesDone:
      BLL2 A 1 A_FadeOut(0.1);
      wait;
   Spawn:
   Melee:
      BLL2 A 0;
      BLL2 A 0 A_JumpIf(level.time % 3, "Null");
      BLL2 A 0 A_StartSound("weapons/plasma/laser/spark", lch_body, CHANF_LOOP);
      BLL2 A 1 A_FadeOut(0.05);
      wait;
   }
}

class Lith_PlasmaLaze : Actor;

default {
   RenderStyle "Add";
   Scale 0.3;

   +ForceXyBillboard
   +NoInteraction
   +NoTimeFreeze
}

override void Tick() {
   static const color crs[] = {"red", "orange", "yellow", "green", "cyan", "blue", "purple", "deep pink"};

   if(lith_weapons_rainbowlaser) {
      A_SetRenderStyle(Alpha, STYLE_AddStencil);
      SetShade(crs[uint(-int(Target.Distance2D(self) / 20) + Level.Time) % crs.Size()]);
   }

   Super.Tick();
}

states {
Spawn:
   BLLT E 0 bright;
   BLLT E 0 bright A_JumpIf(Random(0, 255) < 10, "Spawn2");
Spawn1:
   BLLT E 2 bright;
   stop;
Spawn2:
   BLLT E 2 bright light("Lith_FinalizerLight");
   stop;
}

/* EOF */
