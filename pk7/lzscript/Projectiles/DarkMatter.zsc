// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Alison G. Watson. Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_DarkMatterDeath : Actor {
   states {
   Spawn:
      TNT1 A 1 {
         if(target) target.A_FadeOut(0.01, FTF_REMOVE);
         else       destroy();
      }
      loop;
   }
}

class Lith_DarkMatterPuff : Actor {
   default {
      DamageType "DarkMatter";
      +NOGRAVITY
      +ALWAYSPUFF
      +HITTRACER
   }
   override void markPrecacheSounds() {
      super.markPrecacheSounds();
      markSound("weapons/dark/impact");
   }
   states {
   Spawn:
      TNT1 A 0;
      TNT1 A 0 A_StartSound("weapons/dark/impact", lch_body, volume: 0.1);
      stop;
   }
}

class Lith_DarkMatterRailgun : Actor {
   default {
      DamageType "DarkMatter";
      Species "Lith_Player";
      +DONTHARMSPECIES
      +NOGRAVITY
      +NOBLOCKMAP
      +NOCLIP
   }
   states {
   Spawn:
      TNT1 A 0;
      TNT1 A 0 A_CustomRailgun(10000, 0, 0, 0, RGF_SILENT|RGF_FULLBRIGHT|RGF_EXPLICITANGLE,
         0, 0.99, "Lith_DarkMatterPuff", frandom(0, 360), frandom(0, 360), 0, 1, 2, 1,
         "Lith_DarkMatterParticle");
      stop;
   }
}

class Lith_DarkMatterParticle : Actor {
   default {
      RenderStyle "Subtract";
      Alpha 0.9;

      +NOINTERACTION
      +BRIGHT
   }
   states {
   Spawn:
      TNT1 A random(2, 5);
      BLLT A 1 {A_SetScale(frandom(1, 2)); A_FadeOut(0.05);}
      wait;
   }
}

class Lith_DarkMatter : Actor {
   default {
      Radius 2;
      Height 2;
      Speed 1;
      Damage 0;
      Scale 0.25;
      RenderStyle "Subtract";
      DamageType "DarkMatter";
      Mass 999999;
      Projectile;
      +FORCEXYBILLBOARD
      +BRIGHT
      +FORCERADIUSDMG
   }
   override void markPrecacheSounds() {
      super.markPrecacheSounds();
      markSound("weapons/dark/wind");
      markSound("weapons/dark/water");
      markSound("weapons/dark/fire");
   }
   states {
   Spawn:
      BLLT F 0;
      BLLT F 0 A_StartSound("weapons/dark/wind", lch_body, CHANF_LOOP, ATTN_NONE);
      BLLT F 1 {
         for(let it = BlockThingsIterator.create(self, 128); it.next();) {
            let mo = it.thing;
            if(mo && mo != target && mo.bSHOOTABLE && mo.checkSight(self)) {
               mo.A_SetRenderStyle(frandom(0.1, 0.9), STYLE_Subtract);

               for(int i = 0; i < 77; i++)
                  mo.A_SpawnItemEx("Lith_PlayerDeathParticle", frandom(-32,32), frandom(-32,32), frandom(0, 64), frandom(-2, 2), frandom(-2, 2), frandom(1, 2), 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS);

               mo.A_Die();

               spawn("Lith_DarkMatterDeath").target = self;
            }
         }

         if(random(0, 20) == 2)
            A_StartSound("weapons/dark/water", lch_voice, attenuation: 0.25);

         for(int i = 0; i < 2; i++)
         {
            if(random(0, 15) == 5)
            {
               A_StartSound("weapons/dark/fire", lch_weapon, attenuation: 0.5);
               int num = random(0, 10);
               for(int j = 0; j < num; j++)
                  A_SpawnItemEx("Lith_DarkMatterRailgun", frandom(-32,32),frandom(-32,32),frandom(-16,16), flags: SXF_TRANSFERPOINTERS);
            }
         }

         for(int i = 0; i < 7; i++)
            A_SpawnItemEx("Lith_DarkMatterParticle", frandom(-16,16),frandom(-16,16),frandom(-16,16), frandom(-2,2),frandom(-2,2),frandom(-2,0), flags: SXF_TRANSFERPOINTERS);
      }
      wait;
   }
}

/* EOF */
