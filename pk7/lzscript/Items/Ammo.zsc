// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_Ammo : Inventory abstract {
   default {
      +Inventory.KeepDepleted
   }

   transient string m_ammoText;
   transient string m_logText;

   void lith_absorbAmount(string logText, vector3 p, in out int amt) {
      int originalAmt = amt;
      if((amount + amt - maxAmount) <= 0) {
         /* less than or equals max, absorb the whole item */
         amount += amt;
         amt     = 0;
      } else {
         /* more than max, absorb some of the item */
         amt   -= maxAmount - amount;
         amount = maxAmount;
      }
      if(originalAmt - amt > 0) {
         m_ammoText = "\cj+\cd" .. (originalAmt - amt) .. " \c-" .. getTag();
         m_logText  = logText .. ": " .. m_ammoText;
         p.x += fRandom(-8.0, 8.0);
         p.y += fRandom(-8.0, 8.0);
         callAcs("Lith_ItemPopupAmmo", int(p.x*FIX), int(p.y*FIX), int(p.z*FIX));
      }
   }
}

class Lith_ManaAmmo : Lith_Ammo
   {default {Tag "$LITH_TAG_ManaAmmo";   Inventory.MaxAmount 1000;}}
class Lith_BulletAmmo : Lith_Ammo
   {default {Tag "$LITH_TAG_BulletAmmo"; Inventory.MaxAmount 200;}}
class Lith_ShellAmmo : Lith_Ammo
   {default {Tag "$LITH_TAG_ShellAmmo";  Inventory.MaxAmount 40;}}
class Lith_RocketAmmo : Lith_Ammo
   {default {Tag "$LITH_TAG_RocketAmmo"; Inventory.MaxAmount 50;}}
class Lith_PlasmaAmmo : Lith_Ammo
   {default {Tag "$LITH_TAG_PlasmaAmmo"; Inventory.MaxAmount 7000;}}
class Lith_CannonAmmo : Lith_Ammo
   {default {Tag "$LITH_TAG_CannonAmmo"; Inventory.MaxAmount 20;}}

/* EOF */
