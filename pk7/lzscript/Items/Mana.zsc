// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_ManaPickupTrail : Actor
{
   default
   {
      Scale 0.4;
      RenderStyle "Add";

      +NOTIMEFREEZE
      +NOINTERACTION
      +BRIGHT
   }

   states
   {
   Spawn:
      BLLT Q 0 A_SetScale(Scale.X * 0.9);
      BLLT Q 1 A_FadeOut(0.05);
      loop;
   }
}

class Lith_ManaPickup : Lith_BasicPickup;

default {
   RenderStyle "Add";
   Radius 4;
   Height 64;
   Scale 0.8;
   Inventory.PickupSound "player/pickup/mana";
   Inventory.PickupMessage "";
   Tag "$LITH_STATUS_MP";
   -Lith_BasicPickup.DrawPopup
   +Inventory.AlwaysPickup
   +Inventory.Transfer
   +Inventory.NoScreenFlash
   +DontGib
   +NoGravity
   +NoClip
   +SeekerMissile
   +Bright
}

override void PostBeginPlay() {
   Super.PostBeginPlay();
   A_SetTranslation("Lith_Mana" .. Random(1, 8));
   Scale *= FRandom(0.5, 1);
   GiveInventory("Lith_ManaAmmo", Random(7, 10));
   ThrustThingZ(0, 16, 0, 1);
}

int m_DeathWait;

states(Actor) {
Spawn:
   BLLT Q 0;
   BLLT Q 0 A_JumpIf(m_DeathWait++ >= 35 * 15, "Death");
   BLLT Q 0 A_ChangeVelocity(14, 14, Vel.Z*0.9, CVF_REPLACE);
   BLLT Q 0 A_SpawnItemEx("Lith_ManaPickupTrail", flags: SXF_TRANSFERTRANSLATION);
   BLLT Q 0 {
      if(CheckIfTargetInLOS())
         A_SeekerMissile(90, 40, SMF_PRECISE|SMF_CURSPEED);
   }
   BLLT Q 1;
   loop;
Death:
   BLLT Q 1 A_FadeOut;
   wait;
}

/* EOF */
