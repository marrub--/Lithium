// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_BossReward1 : Lith_CbiItem {
   default {
      Tag "$LITH_TAG_Upgrade1";
      Lith_CbiItem.UpgrNum bossreward_easy_1;
      Lith_CbiItem.SpriteM "WUPGA";
      Lith_CbiItem.SpriteC "SPELA";
      Lith_CbiItem.SpriteD "MOTRZ";
   }
}

class Lith_BossReward2 : Lith_CbiItem {
   default {
      Tag "$LITH_TAG_Upgrade2";
      Lith_CbiItem.UpgrNum bossreward_easy_2;
      Lith_CbiItem.SpriteM "CUPGA";
      Lith_CbiItem.SpriteC "SPELB";
      Lith_CbiItem.SpriteD "CUPGC";
   }
}

class Lith_BossReward3 : Lith_CbiItem {
   default {
      Tag "$LITH_TAG_Upgrade3";
      Lith_CbiItem.UpgrNum bossreward_med_1;
      Lith_CbiItem.SpriteM "ARM1Z";
      Lith_CbiItem.SpriteC "SPELC";
      Lith_CbiItem.SpriteD "CUPGG";
   }
}

class Lith_BossReward4 : Lith_CbiItem {
   default {
      Tag "$LITH_TAG_Upgrade4";
      Lith_CbiItem.UpgrNum bossreward_med_2;
      Lith_CbiItem.SpriteM "CUPGB";
      Lith_CbiItem.SpriteC "SPELD";
      Lith_CbiItem.SpriteD "CUPGD";
   }
}

class Lith_BossReward5 : Lith_CbiItem {
   default {
      Tag "$LITH_TAG_Upgrade5";
      Lith_CbiItem.UpgrNum bossreward_med_3;
      Lith_CbiItem.SpriteM "WRDPA";
      Lith_CbiItem.SpriteC "SPELE";
      Lith_CbiItem.SpriteD "CUPGE";
   }
}

class Lith_BossReward6 : Lith_CbiItem {
   default {
      Tag "$LITH_TAG_Upgrade6";
      Lith_CbiItem.UpgrNum bossreward_hard_1;
      Lith_CbiItem.SpriteM "IOBJC";
      Lith_CbiItem.SpriteC "IOBJC";
      Lith_CbiItem.SpriteD "CUPGF";
   }
}

class Lith_CbiItem : Inventory abstract;

mixin Lith_Pickup;

default {
   Inventory.PickupMessage "";
   Inventory.PickupSound "player/pickup/upgrcbi";
   Lith_CbiItem.Glow "Lith_UpgrGlow";
   +Inventory.AlwaysPickup
   +DontGib
}

meta int m_upgNum;

property UpgrNum: m_upgNum;

override void postBeginPlay() {
   super.postBeginPlay();
   pkPostBeginPlay();
   acs_namedExecuteWithResult("Lith_CbiItemWasSpawned", m_upgNum);
}

override void tick() {
   super.tick();
   pkTick();
}

override bool tryPickup(in out Actor mo) {
   mo.acs_scriptCall("Lith_PickupCbiItem", m_upgNum);
   goAwayAndDie();
   return true;
}

override void playPickupSound(Actor toucher) {
   int pcl = 1 << Lith_Player(toucher).m_pclass;
   if(pcl_outcasts & pcl) {
      pickupSound = "player/pickup/upgrcbio";
   } else if(pcl_missioners & pcl) {
      pickupSound = "player/pickup/upgrcbim";
   } else if(pcl_intruders & pcl) {
      pickupSound = "player/pickup/upgrcbii";
   } else if(pcl_finalizer & pcl) {
      pickupSound = "player/pickup/upgrcbif";
   }
   super.playPickupSound(toucher);
}

/* EOF */
