// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_ArchangelStaticBall : Actor
{
   default
   {
      ReactionTime 0;
      RenderStyle  "Stencil";
      Scale        0.35;
      StencilColor "white";

      +BRIGHT
      +NOBLOCKMAP
      +NOINTERACTION
   }

   override void PostBeginPlay()
   {
      Super.PostBeginPlay();
      if(ReactionTime == 0)
      {
         Angle = FRandom(0, 359);
         Vel.Z = 1;
      }
      Lith_CopyEffect.create("Lith_StaticEffect", self);
   }

   override void Tick()
   {
      Super.Tick();
      if(!isFrozen() && ReactionTime == 0)
      {
         A_Weave(1, 0, 2, 0);
         let mo = Spawn("Lith_ArchangelStaticBall", Pos);
         mo.ReactionTime = 1;
         mo.Angle = Angle;
         mo.Scale = Scale;
      }
   }

   states
   {
   Spawn:
      BLLT A 4;
      BLLT A 1 {Scale *= 0.97; if(Scale.X <= 0.01) Destroy();}
      wait;
   }
}

class Lith_Archangel : Lith_Monster;

default
{
   Health         8000;
   Height         56;
   Mass           500;
   MaxTargetRange 896;
   PainChance     2;
   Radius         20;
   RenderStyle    "Stencil";
   Speed          15;
   StencilColor   "white";
   Species        "Lith_Angel";

   ActiveSound "vile/active";
   DeathSound  "vile/death";
   MeleeSound  "vile/stop";
   PainSound   "vile/pain";
   SeeSound    "vile/sight";

   Obituary "$OB_VILE";
   Tag      "$LITH_INFO_SHORT_Archangel";

   +BRIGHT
   +FLOORCLIP
   +NOTARGET
   +QUICKTORETALIATE
}

override void PostBeginPlay()
{
   Super.PostBeginPlay();
   Lith_CopyEffect.create("Lith_StaticEffect", self);
}

override void Tick()
{
   Super.Tick();
   if(!isFrozen())
   {
      if(Level.TotalTime % 6 == 0)
         Spawn("Lith_ArchangelStaticBall", Pos + (FRandom(-64, 64), FRandom(-64, 64), FRandom(0, 16)));
      Lith_CopyEffect.create("Lith_HeavenlyImage", self, (-4,-4,0), (-5,-7,1));
      Lith_CopyEffect.create("Lith_HeavenlyImage", self, (-4, 4,0), (-5, 7,1));
   }
}

states
{
Spawn:
   VILE AB 10 A_Look;
   loop;

See:
   VILE AABBCCDDEEFF 2 A_VileChase;
   loop;

Missile:
   VILE G 0 bright A_VileStart;
   VILE G 10 bright A_FaceTarget;
   VILE H 8 bright A_VileTarget;
   VILE IJKLM 8 bright A_FaceTarget;
   VILE N 8 bright A_FaceTarget;
   VILE N 0 bright {
      if(Target && CheckSight(Target))
         A_VileTarget("Lith_ArchvileImmolator");
   }
   VILE O 8 bright A_VileAttack("vile/stop", 20, 70, 70, 1.0, "FireMagic");
   VILE P 20 bright;
   VILE P 0 ResolveState("See");
   stop;

Heal:
   VILE [\] 10 bright;
   VILE ] 0 ResolveState("See");
   stop;

Pain:
   VILE Q 5;
   VILE Q 5 A_Pain;
   VILE Q 5 ResolveState("See");
   stop;

Death:
   VILE Q -1;
Crash:
   VILE Q 7 Lith_A_Die;
   VILE RSTUVWXY 7;
   VILE Z -1;
   stop;
}

/* EOF */
