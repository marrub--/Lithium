// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_MakarovShotgunBullet : FastProjectile
{
   default
   {
      Alpha 0.9;
      DamageFunction 3 * Random(1, 4);
      DamageType "Bullet";
      Height 20;
      MissileType "Lith_MonsterBulletTrail";
      Radius 8;
      RenderStyle "Translucent";
      Scale 0.5;
      Speed 96;

      +BLOODSPLATTER
   }

   states
   {
   Spawn:
      TNT1 A 1;
      wait;
   Crash:
   Death:
      PUFF CD 4;
      stop;
   XDeath:
      TNT1 A 0;
      stop;
   }
}

class Lith_MakarovGrenade : Lith_RifleGrenade {
   default {
      DamageFunction 5 * random(1, 8);
      Species "Lith_Phantom";
      Speed   30;
      ExplosionDamage 32;
      ExplosionRadius 64;

      +DONTHARMSPECIES
   }
}

class Lith_MakarovChainFX : Actor
{
   states
   {
   Spawn:
      BLLT I 10 bright;
      stop;
   }
}

class Lith_MakarovChain : Actor
{
   default
   {
      Damage     2;
      DamageType "Melee";
      Speed      30;

      Projectile;
      +HITTRACER
   }

   override void markPrecacheSounds() {
      super.markPrecacheSounds();
      markSound("enemies/makarov/chainhit");
   }
   states
   {
   Spawn:
      TNT1 A 1 A_SpawnItemEx("Lith_MakarovChainFX");
      wait;
   XDeath:
      TNT1 A 0 A_StartSound("enemies/makarov/chainhit", lch_body);
   Death:
      TNT1 AAAAAAAAAAAAAAAAAAAA 1 {if(tracer) tracer.A_Stop();}
      stop;
   }
}

class Lith_Boss_Makarov : Lith_Phantom;

default
{
   Health 3000;

   Tag "$LITH_INFO_TITLE_Makarov";
}
override void markPrecacheSounds() {
   super.markPrecacheSounds();
   markSound("enemies/makarov/fire");
   markSound("enemies/makarov/pump");
   markSound("enemies/makarov/throw");
   markSound("enemies/makarov/chainthrow");
   markSound("enemies/makarov/scythe");
   markSound("enemies/makarov/scythehit");
   markSound("enemies/phantom/lunge");
}

states
{
See:
   PLAY AAAAAAAABBBBBBBBCCCCCCCCDDDDDDDD 1 A_Chase;
   loop;
Missile:
   PLAY E 0 A_JumpIf(m_Phase < 2, "MissileStart");
   PLAY F 0 A_JumpIf(m_MeleeTime > 0, "MissileStart");
   PLAY E 0 A_JumpIfCloser(384, "Lunge");
MissileStart:
   PLAY E 0 A_Jump(100, "Missile2", "Missile3");
Missile1:
   PLAY E 0 A_StartSound("enemies/makarov/fire", lch_weapon);
   PLAY EEEEEEEE 0 A_SpawnProjectile("Lith_MakarovShotgunBullet", 32, 0, frandom(-20, 20), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(-5, 5));
   PLAY E 5 A_FaceTarget;
   PLAY F 2 A_FaceTarget;
   PLAY E 10 A_StartSound("enemies/makarov/pump", lch_weapon2);
   PLAY F 10;
   PLAY F 0 A_Jump(100, "See");
   PLAY F 2 A_MonsterRefire(30, "See");
   loop;
Missile2:
   PLAY E 0 A_JumpIfCloser(200, "Missile1");
   PLAY E 0 A_StartSound("enemies/makarov/throw", lch_weapon3);
   PLAY E 0 A_SpawnProjectile("Lith_MakarovGrenade", 32, 0, frandom(-4,4), CMF_ABSOLUTEPITCH|CMF_SAVEPITCH|CMF_BADPITCH, -10);
   PLAY EF 10;
   goto See;
Missile3:
   PLAY E 0 A_JumpIf(m_Phase < 3, "Missile2");
   PLAY E 0 A_StartSound("enemies/makarov/chainthrow", lch_weapon3);
   PLAY E 0 A_SpawnProjectile("Lith_MakarovChain", 32, 0, 0, CMF_BADPITCH);
   PLAY EF 10;
   goto See;
Melee:
   PLAY F 0 A_JumpIf(m_Phase < 2, "Missile");
   PLAY F 0 A_JumpIf(m_MeleeTime > 0, "Missile");
   PLAY F 0 {m_MeleeTime = 35;}
   PLAY F 0 A_FaceTarget;
   PLAY F 5 A_CustomMeleeAttack(15 * random(1, 5), "enemies/makarov/scythehit", "enemies/makarov/scythe", "Melee");
   PLAY F 7;
   goto See;
Lunge:
   PLAY A 0 A_StartSound("enemies/phantom/lunge", lch_body, attenuation: 0.5);
   PLAY A 10 A_FaceTarget;
   PLAY A 0 A_FaceTarget;
   PLAY A 5 ACS_NamedExecuteWithResult("Lith_PhantomTeleport");
   goto Melee;
}

/* EOF */
