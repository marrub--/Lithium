// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_XH_LostSoul : Lith_LostSoul
{
}

class Lith_LostSoul : Lith_Monster replaces LostSoul;

default
{
   Alpha       0.7;
   Damage      3;
   Health      70;
   Height      56;
   Mass        50;
   PainChance  256;
   Radius      16;
   RenderStyle "Add";
   Speed       8;
   Species     "Lith_LostSoul";
   MissileChanceMult 0.5;

   ActiveSound "skull/active";
   AttackSound "skull/melee";
   DeathSound  "skull/death";
   PainSound   "skull/pain";

   Obituary "$OB_SKULL";
   Tag      "$LITH_INFO_SHORT_LostSoul";

   +DontFall
   +Float
   +NoGravity
   +NoIceDeath
   +QuickToRetaliate
   +ThruSpecies
   -CountKill
}

bool m_Invisible;

states
{
Spawn:
   SKUL AB 10 bright A_Look;
   loop;
GoInvisible:
   SKUL AABBAABBAA 1 bright A_FadeTo(0.08);
   SKUL A 0 {bCastSpriteShadow = false; m_Invisible = true;}
   goto See;
StopBeingInvisibleBaka:
   SKUL AABBAABBAA 1 bright A_FadeTo(0.7);
   SKUL A 0 {bCastSpriteShadow = true; m_Invisible = false;}
   goto Missile;

See:
   SKUL A 0 A_JumpIf(!m_Invisible && random(0, 128) < 64, "GoInvisible");
   SKUL AAAAABBBBB 1 bright A_FastChase;
   loop;

Missile:
   SKUL A 0 A_JumpIf(m_Invisible, "StopBeingInvisibleBaka");
   SKUL C 10 bright A_FaceTarget;
   SKUL D 4 bright A_SkullAttack;
MissileLoop:
   SKUL CCCCDDDD 1 bright;
   loop;

Pain:
   SKUL E 0 A_SetTranslucent(0.7, 1);
   SKUL E 3 bright;
   SKUL E 3 bright A_Pain;
   goto See;

Death:
   SKUL F 0 A_SetTranslucent(0.7, 1);
   SKUL F 6 bright;
   SKUL G 6 bright A_Scream;
   SKUL H 6 bright;
   SKUL I 6 bright A_NoBlocking;
   SKUL J 6;
   SKUL K 6;
   stop;
}

/* EOF */
