// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_ArchvileFire : ArchvileFire replaces ArchvileFire
{
   default
   {
      Translation "Lith_ArchvileFire";
      +ForceYBillboard
   }
}

class Lith_ArchvileImmolator : Actor
{
   void Lith_A_SpawnParticles(color c)
   {
      A_SpawnParticle(c, SPF_FULLBRIGHT|SPF_RELATIVE, 35, Random(2,6), 0,
         FRandom(-16,16),FRandom(-16,16),FRandom(0,1),
         0,0,FRandom(0,10),
         FRandom(-0.1, 0.1),FRandom(-0.1, 0.1));
      A_SpawnParticle(c, SPF_FULLBRIGHT|SPF_RELATIVE, 35, Random(2,6), 0,
         FRandom(-16,16),FRandom(-16,16),FRandom(0,1),
         FRandom(-10,10),FRandom(-10,10),0,
         FRandom(-0.1, 0.1),FRandom(-0.1, 0.1));
   }

   states
   {
   Spawn:
      TNT1 A 0;
      TNT1 A 1 A_SpawnItemEx("Lith_ArchvileImmolatorBlast",0,0,FloorZ);
      TNT1 AAAAAAAAAA 0 Lith_A_SpawnParticles("FFFF73");
      TNT1 AAAAAAAAAA 0 Lith_A_SpawnParticles("732B00");
      TNT1 AAAAAAAAAA 0 Lith_A_SpawnParticles("7F1B1B");
      stop;
   }
}

class Lith_ArchvileImmolatorBlast : Actor
{
   default
   {
      Mass int.Max;
      Translation "Lith_ArchvileImmolatorBlast";

      +FloorHugger
      +ForceYBillboard
      -NoGravity
   }

   states
   {
   Spawn:
      #EAB AB 1 bright;
      #EAB C 2 bright;
      #EAB DE 3 bright;
      #EAB FGH 4 bright;
      #EAB IJ 5 A_FadeOut;
      stop;
   }
}

class Lith_XH_Archvile : Lith_Archvile
{
}

class Lith_Archvile : Lith_Monster replaces Archvile;

default
{
   Health         800;
   Height         56;
   Mass           500;
   MaxTargetRange 896;
   PainChance     2;
   Radius         20;
   Speed          15;
   Species        "Lith_Archvile";

   ActiveSound "vile/active";
   DeathSound  "vile/death";
   MeleeSound  "vile/stop";
   PainSound   "vile/pain";
   SeeSound    "vile/sight";

   Obituary "$OB_VILE";
   Tag      "$LITH_INFO_SHORT_Archvile";

   +FloorClip
   +NoTarget
   +QuickToRetaliate
}

states
{
Spawn:
   VILE AB 10 A_Look;
   loop;

See:
   VILE AABBCCDDEEFF 2 A_VileChase;
   loop;

Missile:
   VILE G 0 bright A_VileStart;
   VILE G 10 bright A_FaceTarget;
   VILE H 8 bright A_VileTarget;
   VILE IJKLM 8 bright A_FaceTarget;
   VILE N 8 bright A_FaceTarget;
   VILE N 0 bright {
      if(Target && CheckSight(Target))
         A_VileTarget("Lith_ArchvileImmolator");
   }
   VILE O 8 bright A_VileAttack("vile/stop", 20, 70, 70, 1.0, "FireMagic");
   VILE P 20 bright;
   VILE P 0 ResolveState("See");
   stop;

Heal:
   VILE [\] 10 bright;
   VILE ] 0 ResolveState("See");
   stop;

Pain:
   VILE Q 5;
   VILE Q 5 A_Pain;
   VILE Q 5 ResolveState("See");
   stop;

Death:
   VILE Q -1;
Crash:
   VILE Q 7 Lith_A_Die;
   VILE RSTUVWXY 7;
   VILE Z -1;
   stop;

Death.Extreme:
   #MAV A -1;
Crash.Extreme:
   #MAV A 5 Lith_A_XDie;
   #MAV BCDEF 5;
   #MAV G -1;
   stop;
}

/* EOF */
