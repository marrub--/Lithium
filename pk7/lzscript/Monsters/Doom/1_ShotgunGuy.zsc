// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Marrub / Alison.  Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_XH_ShotgunGuy : Lith_ShotgunGuy
{
   default
   {
      MinMissileChance 120;
   }

   override void Lith_A_ShotgunGuyShot()
   {
      if(!Lith_BarrierBullets(3)) for(int i = 0; i < 3; i++)
         A_WolfAttack(WAF_NORANDOM | WAF_USEPUFF, "", 1, 20);
   }
}

class Lith_ShotgunGuy : Lith_Monster replaces ShotgunGuy;

default
{
   Health           35;
   Height           56;
   Mass             100;
   MinMissileChance 150;
   PainChance       170;
   Radius           20;
   Speed            9;
   Species          "Lith_ShotgunGuy";

   DropItem "Lith_Shell", 255, 4;
   DropItem "Lith_ShotgunPickup";

   ActiveSound "shotguy/active";
   DeathSound  "shotguy/death";
   PainSound   "shotguy/pain";
   SeeSound    "shotguy/sight";

   Obituary "$OB_SHOTGUY";
   Tag      "$LITH_INFO_SHORT_ShotgunGuy";

   +FLOORCLIP
}

virtual void Lith_A_ShotgunGuyShot()
{
   if(!Lith_BarrierBullets(3))
      A_CustomBulletAttack(22.5, 4, 3, random(1, 5) * 3, "BulletPuff", 0, CBAF_NORANDOM);
}

override void markPrecacheSounds() {
   super.markPrecacheSounds();
   markSound("enemies/shotguy/fire");
   markSound("enemies/shotguy/ready");
}

states
{
Spawn:
   SPOS AB 10 A_Look;
   loop;

See:
   SPOS AABBCCDD 3 A_Chase;
   loop;

Missile:
   SPOS E 2 A_FaceTarget;
   SPOS E 0 A_StartSound("enemies/shotguy/ready", lch_body, CHANF_NOPAUSE);
   SPOS E 10 A_FaceTarget;
   SPOS F 0 A_StartSound("enemies/shotguy/fire", lch_weapon);
   SPOS F 0 Lith_A_ShotgunGuyShot;
   SPOS F 10 bright;
   SPOS E 10;
   SPOS E 0 ResolveState("See");
   stop;

Pain:
   SPOS G 3;
   SPOS G 3 A_Pain;
   SPOS G 0 ResolveState("See");
   stop;

Death:
   SPOS H -1;
Crash:
   SPOS H 5 Lith_A_Die;
   SPOS IJK 5;
   SPOS L -1;
   stop;
Death.Extreme:
   SPOS M -1;
Crash.Extreme:
   SPOS M 5 Lith_A_XDie;
   SPOS NOPQRST 5;
   SPOS U -1;
   stop;

Raise:
   SPOS LKJIH 5;
   SPOS A 0 ResolveState("See");
   stop;
}

/* EOF */
